{"version":3,"file":"test.js","sources":["src/utilities.ts","src/1_Core/_module.ts","src/1_Core/Arguments.ts","src/1_Core/End Value Caching.ts","src/1_Core/End Value Setting.ts","src/1_Core/Start Value Calculation.ts","src/1_Core/Unit Calculation.ts","src/2_Option/_module.ts","src/2_Option/Option Begin.ts","src/2_Option/Option Complete.ts","src/2_Option/Option Delay.ts","src/2_Option/Option Easing.ts","src/2_Option/Option Fps Limit.ts","src/2_Option/Option Loop.ts","src/2_Option/Option Progress.ts","src/2_Option/Option Queue.ts","src/2_Option/Option Repeat.ts","src/2_Option/Option Speed.ts","src/2_Option/Option Sync.ts","src/3_Command/_module.ts","src/3_Command/Command Finish.ts","src/3_Command/Command Pause + Resume.ts","src/3_Command/Command Reverse.ts","src/3_Command/Command Scroll.ts","src/3_Command/Command Stop.ts","src/3_Command/Command Tween.ts","src/4_Feature/_module.ts","src/4_Feature/Feature Classname.ts","src/4_Feature/Feature Colors.ts","src/4_Feature/Feature Forcefeeding.ts","src/4_Feature/Feature Promises.ts","src/4_Feature/Feature Sequences.ts","src/4_Feature/Feature Value Functions.ts","src/5_UIPack/_module.ts","src/5_UIPack/Packaged Effect slideUp+Down.ts","src/5_UIPack/UI Pack Call Options.ts","src/5_UIPack/UI Pack Callbacks.ts","src/5_UIPack/UI Pack In+Out.ts","src/5_UIPack/UI Pack RegisterEffect.ts","src/5_UIPack/UI Pack RunSequence.ts","src/6_Properties/_module.ts","src/6_Properties/Normalization property value reordering.ts","src/6_Properties/Property Display.ts","src/6_Properties/Property Visibility.ts"],"sourcesContent":["/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity, {ElementData, VelocityOptions, VelocityProperties} from \"velocity-animate\";\r\n\r\ndeclare global {\r\n\tinterface QUnit {\r\n\t\ttodo(name: string, callback: (assert: Assert) => void): void;\r\n\t}\r\n\r\n\tinterface Assert {\r\n\t\tclose: {\r\n\t\t\t(actual: number, expected: number, maxDifference: number, message: string): void;\r\n\t\t\tpercent(actual: number, expected: number, maxPercentDifference: number, message: string): void;\r\n\t\t};\r\n\t\tnotClose: {\r\n\t\t\t(actual: number, expected: number, minDifference: number, message: string): void;\r\n\t\t\tpercent(actual: number, expected: number, minPercentDifference: number, message: string): void;\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),\r\n\tisAndroid = /Android/i.test(navigator.userAgent),\r\n\tdefaultStyles = {\r\n\t\topacity: 1,\r\n\t\twidth: 1,\r\n\t\theight: 1,\r\n\t\tmarginBottom: 1,\r\n\t\tcolorGreen: 200,\r\n\t\ttextShadowBlur: 3,\r\n\t},\r\n\tdefaultProperties: VelocityProperties = {\r\n\t\topacity: String(defaultStyles.opacity / 2),\r\n\t\twidth: defaultStyles.width * 2 + \"px\",\r\n\t\theight: defaultStyles.height * 2 + \"px\",\r\n\t},\r\n\tdefaultOptions: VelocityOptions = {\r\n\t\tqueue: \"\",\r\n\t\tduration: 300,\r\n\t\teasing: \"swing\",\r\n\t\tbegin: null,\r\n\t\tcomplete: null,\r\n\t\tprogress: null,\r\n\t\tloop: false,\r\n\t\tdelay: 0,\r\n\t\tmobileHA: true,\r\n\t},\r\n\t$ = ((window as any).jQuery || (window as any).Zepto),\r\n\t$qunitStage = document.getElementById(\"qunit-stage\"),\r\n\tasyncCheckDuration = (defaultOptions.duration as number) / 2,\r\n\tcompleteCheckDuration = (defaultOptions.duration as number) * 2,\r\n\tIE = (() => {\r\n\t\tif ((document as any).documentMode) {\r\n\t\t\treturn (document as any).documentMode as number;\r\n\t\t} else {\r\n\t\t\tfor (let i = 7; i > 0; i--) {\r\n\t\t\t\tlet div = document.createElement(\"div\");\r\n\r\n\t\t\t\tdiv.innerHTML = `<!${\"--\"}[if IE ${i}]><span></span><![endif]-->`;\r\n\t\t\t\tif (div.getElementsByTagName(\"span\").length) {\r\n\t\t\t\t\tdiv = null;\r\n\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t\tdiv = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\t})();\r\n\r\nconst targets: HTMLDivElement[] = [];\r\nlet asyncCount = 0;\r\n\r\nQUnit.config.reorder = false;\r\n\r\nexport function applyStartValues(element: HTMLElement, startValues: {[name: string]: string}) {\r\n\t$.each(startValues, (property, startValue) => {\r\n\t\telement.style[property] = startValue;\r\n\t});\r\n}\r\n\r\nexport function Data(element): ElementData {\r\n\treturn (element.jquery ? element[0] : element).velocityData;\r\n}\r\n\r\nexport function getNow(): number {\r\n\treturn performance && performance.now ? performance.now() : Date.now();\r\n}\r\n\r\nexport function getPropertyValue(element: HTMLElement, property: string): string {\r\n\treturn Velocity(element, \"style\", property);\r\n}\r\n\r\nexport function getTarget(startValues?: {[name: string]: string}): HTMLDivElement {\r\n\tconst div = document.createElement(\"div\") as HTMLDivElement;\r\n\r\n\tdiv.className = \"target\";\r\n\tdiv.style.opacity = String(defaultStyles.opacity);\r\n\tdiv.style.color = `rgb(125, ${defaultStyles.colorGreen}, 125)`;\r\n\tdiv.style.width = defaultStyles.width + \"px\";\r\n\tdiv.style.height = defaultStyles.height + \"px\";\r\n\tdiv.style.marginBottom = defaultStyles.marginBottom + \"px\";\r\n\tdiv.style.textShadow = `0px 0px ${defaultStyles.textShadowBlur}px red`;\r\n\t$qunitStage.appendChild(div);\r\n\ttargets.push(div);\r\n\tif (startValues) {\r\n\t\tapplyStartValues(div, startValues);\r\n\t}\r\n\r\n\treturn div;\r\n}\r\n\r\nexport function once(func): typeof func {\r\n\tlet done: boolean,\r\n\t\tresult: any;\r\n\r\n\treturn function(this: any) {\r\n\t\tif (!done) {\r\n\t\t\tresult = func.apply(this, arguments);\r\n\t\t\tfunc = done = true; // Don't care about type, just let the GC collect if possible\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n}\r\n\r\nexport function sleep(ms: number) {\r\n\treturn new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\n/**\r\n * Create an asyn callback. Each callback must be independant of all others, and\r\n * gets it's own unique done() callback to use. This also requires a count of\r\n * the number of tests run, and the assert object used.\r\n * Call without any arguments to get a total count of tests requested.\r\n */\r\nexport function asyncTests(): number;\r\nexport function asyncTests(assert: Assert, count: number, callback: (done: () => void) => void): void;\r\nexport function asyncTests(assert?: Assert, count?: number, callback?: (done: () => void) => void): number {\r\n\tif (!assert) {\r\n\t\tconst oldCount = asyncCount;\r\n\r\n\t\tasyncCount = 0;\r\n\r\n\t\treturn oldCount;\r\n\t}\r\n\tconst done = assert.async(1);\r\n\r\n\tasyncCount += count;\r\n\tsetTimeout(() => {\r\n\t\tcallback(done);\r\n\t}, 1);\r\n}\r\n\r\nexport function isEmptyObject(variable): variable is {} {\r\n\tfor (const name in variable) {\r\n\t\tif (variable.hasOwnProperty(name)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\nQUnit.testDone(() => {\r\n\ttry {\r\n\t\tdocument.querySelectorAll(\".velocity-animating\")\r\n\t\t\t.velocity(\"stop\");\r\n\t} catch {\r\n\t\t// We don't care if it fails.\r\n\t}\r\n\t// Free all targets requested by the current test.\r\n\twhile (targets.length) {\r\n\t\ttry {\r\n\t\t\t$qunitStage.removeChild(targets.pop());\r\n\t\t} catch {\r\n\t\t\t// We don't care if it fails.\r\n\t\t}\r\n\t}\r\n\t// Ensure we have reset the test counter.\r\n\tasyncTests();\r\n\t// Make sure Velocity goes back to defaults.\r\n\tVelocity.defaults.reset();\r\n});\r\n\r\n/* Cleanup */\r\nQUnit.done((details) => {\r\n\t//\t$(\".velocity-animating\").velocity(\"stop\");\r\n\tconsole.log(\"Total: \", details.total, \" Failed: \", details.failed, \" Passed: \", details.passed, \" Runtime: \", details.runtime);\r\n});\r\n\r\n/* Helpful redirect for testing custom and parallel queues. */\r\n// var $div2 = $(\"#DataBody-PropertiesDummy\");\r\n// $.fn.velocity.defaults.duration = 1000;\r\n// $div2.velocity(\"scroll\", { queue: \"test\" })\r\n// $div2.velocity({width: 100}, { queue: \"test\" })\r\n// $div2.velocity({ borderWidth: 50 }, { queue: \"test\" })\r\n// $div2.velocity({height: 20}, { queue: \"test\" })\r\n// $div2.velocity({marginLeft: 200}, { queue: \"test\" })\r\n// $div2.velocity({paddingTop: 60});\r\n// $div2.velocity({marginTop: 100});\r\n// $div2.velocity({paddingRight: 40});\r\n// $div2.velocity({marginTop: 0})\r\n// $div2.dequeue(\"test\")\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nQUnit.module(\"Core\");\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity, {VelocityOptions, VelocityResult} from \"velocity-animate\";\r\nimport {Data, defaultProperties, getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.test(\"Arguments\", (assert) => {\r\n\tconst testComplete = () => {\r\n\t\t// Do nothing\r\n\t},\r\n\t\ttestDuration = 1000,\r\n\t\ttestEasing = \"easeInSine\",\r\n\t\ttestOptions: VelocityOptions = {\r\n\t\t\tduration: 123,\r\n\t\t\teasing: testEasing,\r\n\t\t\tcomplete: testComplete,\r\n\t\t};\r\n\tlet result: VelocityResult;\r\n\r\n\tassert.expect(18);\r\n\r\n\t/****************\r\n\t Overloading\r\n\t ****************/\r\n\r\n\tresult = Velocity(getTarget(), defaultProperties);\r\n\tassert.ok(result.length,\r\n\t\t\"Overload variation #1a: Velocity(ELEMENT, {properties})\");\r\n\tassert.ok(result.velocity.animations.length,\r\n\t\t\"Overload variation #1b: Velocity(element, {PROPERTIES})\");\r\n\r\n\tresult = Velocity(getTarget(), defaultProperties, testDuration);\r\n\tassert.equal(result.velocity.animations[0].options.duration, testDuration,\r\n\t\t\"Overload variation #2a: Velocity(element, {properties}, DURATION<number>)\");\r\n\tresult = Velocity(getTarget(), defaultProperties, \"slow\");\r\n\tassert.equal(result.velocity.animations[0].options.duration, 600,\r\n\t\t\"Overload variation #2b: Velocity(element, {properties}, DURATION<slow>)\");\r\n\tresult = Velocity(getTarget(), defaultProperties, \"normal\");\r\n\tassert.equal(result.velocity.animations[0].options.duration, 400,\r\n\t\t\"Overload variation #2c: Velocity(element, {properties}, DURATION<normal>)\");\r\n\tresult = Velocity(getTarget(), defaultProperties, \"fast\");\r\n\tassert.equal(result.velocity.animations[0].options.duration, 200,\r\n\t\t\"Overload variation #2d: Velocity(element, {properties}, DURATION<fast>)\");\r\n\r\n\tresult = Velocity(getTarget(), defaultProperties, testEasing);\r\n\tassert.equal(typeof result.velocity.animations[0].options.easing, \"function\",\r\n\t\t\"Overload variation #3: Velocity(element, {properties}, EASING)\");\r\n\r\n\tresult = Velocity(getTarget(), defaultProperties, testComplete);\r\n\tassert.equal(typeof result.velocity.animations[0].options.complete, \"function\",\r\n\t\t\"Overload variation #4: Velocity(element, {properties}, COMPLETE)\");\r\n\r\n\tresult = Velocity(getTarget(), defaultProperties, testDuration, [0.42, 0, 0.58, 1]);\r\n\tassert.equal(result.velocity.animations[0].options.duration, testDuration,\r\n\t\t\"Overload variation #5a: Velocity(element, {properties}, DURATION, easing)\");\r\n\tassert.equal(result.velocity.animations[0].options.easing(0.2, 0, 1), 0.0816598562658975,\r\n\t\t\"Overload variation #5b: Velocity(element, {properties}, duration, EASING)\");\r\n\r\n\tresult = Velocity(getTarget(), defaultProperties, testDuration, testComplete);\r\n\tassert.equal(result.velocity.animations[0].options.duration, testDuration,\r\n\t\t\"Overload variation #6a: Velocity(element, {properties}, DURATION, complete)\");\r\n\tassert.equal(result.velocity.animations[0].options.complete, testComplete,\r\n\t\t\"Overload variation #6b: Velocity(element, {properties}, duration, COMPLETE)\");\r\n\r\n\tresult = Velocity(getTarget(), defaultProperties, testDuration, testEasing, testComplete);\r\n\tassert.equal(result.velocity.animations[0].options.duration, testDuration,\r\n\t\t\"Overload variation #7a: Velocity(element, {properties}, DURATION, easing, complete)\");\r\n\tassert.equal(typeof result.velocity.animations[0].options.easing, \"function\",\r\n\t\t\"Overload variation #7b: Velocity(element, {properties}, duration, EASING, complete)\");\r\n\tassert.equal(result.velocity.animations[0].options.complete, testComplete,\r\n\t\t\"Overload variation #7c: Velocity(element, {properties}, duration, easing, COMPLETE)\");\r\n\r\n\tresult = Velocity(getTarget(), defaultProperties, testOptions);\r\n\tassert.equal(result.velocity.animations[0].options.duration, testOptions.duration,\r\n\t\t\"Overload variation #8: Velocity(element, {properties}, {OPTIONS})\");\r\n\r\n\tVelocity({elements: [getTarget()], properties: defaultProperties, options: testOptions});\r\n\tassert.equal(result.velocity.animations[0].options.duration, testOptions.duration,\r\n\t\t\"Overload variation #9: Velocity({elements:[elements], properties:{properties}, options:{OPTIONS})\");\r\n\r\n\tVelocity({elements: [getTarget()], properties: \"stop\", options: testOptions});\r\n\tassert.equal(result.velocity.animations[0].options.duration, testOptions.duration,\r\n\t\t\"Overload variation #10: Velocity({elements:[elements], properties:\\\"ACTION\\\", options:{OPTIONS})\");\r\n\r\n\t//\tvar $target12 = getTarget();\r\n\t//\tVelocity($target12, {opacity: [0.75, \"spring\", 0.25]}, testDuration);\r\n\t//\tassert.equal(Data($target12).style.opacity.startValue, 0.25, \"Overload variation #10a.\");\r\n\t//\tassert.equal(Data($target12).style.opacity.easing, \"spring\", \"Overload variation #10b.\");\r\n\t//\tassert.equal(Data($target12).style.opacity.endValue, 0.75, \"Overload variation #10c.\");\r\n\r\n\t//\tvar $target13 = getTarget();\r\n\t//\tVelocity($target13, {opacity: [0.75, 0.25]}, testDuration);\r\n\t//\tassert.equal(Data($target13).style.opacity.startValue, 0.25, \"Overload variation #11a.\");\r\n\t//\tassert.equal(Data($target13).style.opacity.endValue, 0.75, \"Overload variation #11b.\");\r\n\r\n\t//\tvar $target14 = getTarget();\r\n\t//\tVelocity($target14, {opacity: [0.75, \"spring\"]}, testDuration);\r\n\t//\tassert.equal(Data($target14).style.opacity.endValue, 0.75, \"Overload variation #12a.\");\r\n\t//\tassert.equal(Data($target14).style.opacity.easing, \"spring\", \"Overload variation #12b.\");\r\n\r\n\t//\tif ($) {\r\n\t//\t\tvar $target17 = getTarget();\r\n\t//\t\t$($target17).velocity(defaultProperties, testOptions);\r\n\t//\t\tassert.deepEqual(Data($target17).opts, testOptions, \"$.fn.: Utility function variation #1: options object.\");\r\n\t//\r\n\t//\t\tvar $target18 = getTarget();\r\n\t//\t\t$($target18).velocity({properties: defaultProperties, options: testOptions});\r\n\t//\t\tassert.deepEqual(Data($target18).opts, testOptions, \"$.fn.: Utility function variation #2: single object.\");\r\n\t//\r\n\t//\t\tvar $target19 = getTarget();\r\n\t//\t\t$($target19).velocity(defaultProperties, testDuration, testEasing, testComplete);\r\n\t//\t\tassert.equal(Data($target19).opts.duration, testDuration, \"$.fn.: Utility function variation #2a.\");\r\n\t//\t\tassert.equal(Data($target19).opts.easing, testEasing, \"$.fn.: Utility function variation #2b.\");\r\n\t//\t\tassert.equal(Data($target19).opts.complete, testComplete, \"$.fn.: Utility function variation #2c.\");\r\n\t//\r\n\t//\t\tvar $target20 = getTarget();\r\n\t//\t\tassert.equal($($target20).length, $($target20).velocity(defaultProperties, testDuration, testEasing, testComplete)\r\n\t//\t\t.velocity(defaultProperties, testDuration, testEasing, testComplete).length, \"$.fn.: Elements passed back to the call stack.\");\r\n\t//\t\t// TODO: Should check in a better way - but the prototype chain is now extended with a Promise so a standard (non-length) comparison *will* fail\r\n\t//\t}\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {Data, defaultProperties, getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.test(\"End Value Caching\", (assert) => {\r\n\tconst done = assert.async(2),\r\n\t\tnewProperties = {height: \"50px\", width: \"250px\"};\r\n\r\n\tassert.expect(4);\r\n\r\n\t/* Called after the last call is complete (stale). Ensure that the newly-set (via $.css()) properties are used. */\r\n\tVelocity(getTarget(newProperties), defaultProperties)\r\n\t\t.then((elements) => {\r\n\t\t\tassert.equal(Data(elements[0]).cache.width, defaultProperties.width, \"Stale end value #1 wasn't pulled.\");\r\n\t\t\tassert.equal(Data(elements[0]).cache.height, defaultProperties.height, \"Stale end value #2 wasn't pulled.\");\r\n\r\n\t\t\tdone();\r\n\t\t});\r\n\r\n\tVelocity(getTarget(), defaultProperties)\r\n\t\t.velocity(newProperties)\r\n\t\t.then((elements) => {\r\n\t\t\t/* Chained onto a previous call (fresh). */\r\n\t\t\tassert.equal(Data(elements[0]).cache.width, newProperties.width, \"Chained end value #1 was pulled.\");\r\n\t\t\tassert.equal(Data(elements[0]).cache.height, newProperties.height, \"Chained end value #2 was pulled.\");\r\n\r\n\t\t\tdone();\r\n\t\t});\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {Data, defaultProperties, getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.test(\"End Value Setting\", (assert) => {\r\n\tconst done = assert.async(1);\r\n\r\n\t/* Standard properties. */\r\n\tVelocity(getTarget(), defaultProperties)\r\n\t\t.then((elements) => {\r\n\t\t\tassert.equal(Velocity(elements[0], \"style\", \"width\"), defaultProperties.width, \"Standard end value #1 was set.\");\r\n\t\t\tassert.equal(Velocity(elements[0], \"style\", \"opacity\"), defaultProperties.opacity, \"Standard end value #2 was set.\");\r\n\r\n\t\t\tdone();\r\n\t\t});\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {$qunitStage, applyStartValues, Data, defaultProperties, defaultStyles, getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.todo(\"Start Value Calculation\", (assert) => {\r\n\tconst testStartValues = {\r\n\t\tpaddingLeft: \"10px\",\r\n\t\theight: \"100px\",\r\n\t\tpaddingRight: \"50%\",\r\n\t\tmarginLeft: \"100px\",\r\n\t\tmarginBottom: \"33%\",\r\n\t\tmarginTop: \"100px\",\r\n\t\tlineHeight: \"30px\",\r\n\t\twordSpacing: \"40px\",\r\n\t\tbackgroundColor: \"rgb(123,0,0)\",\r\n\t};\r\n\r\n\t/* Properties not previously defined on the element. */\r\n\tconst $target1 = getTarget();\r\n\r\n\tVelocity($target1, testStartValues);\r\n\tassert.equal(Data($target1).cache.paddingLeft, testStartValues.paddingLeft, \"Undefined standard start value was calculated.\");\r\n\tassert.equal(Data($target1).cache.backgroundColor, testStartValues.backgroundColor, \"Undefined start value hook was calculated.\");\r\n\r\n\t/* Properties previously defined on the element. */\r\n\tconst $target2 = getTarget();\r\n\r\n\tVelocity($target2, defaultProperties);\r\n\tassert.equal(Data($target2).cache.width, parseFloat(defaultStyles.width as any), \"Defined start value #1 was calculated.\");\r\n\tassert.equal(Data($target2).cache.opacity, parseFloat(defaultStyles.opacity as any), \"Defined start value #2 was calculated.\");\r\n\tassert.equal(Data($target2).cache.color, parseFloat(defaultStyles.colorGreen as any), \"Defined hooked start value was calculated.\");\r\n\r\n\t/* Properties that shouldn't cause start values to be unit-converted. */\r\n\tconst testPropertiesEndNoConvert = {paddingLeft: \"20px\", height: \"40px\", paddingRight: \"75%\"},\r\n\t\t$target3 = getTarget();\r\n\r\n\tapplyStartValues($target3, testStartValues);\r\n\tVelocity($target3, testPropertiesEndNoConvert);\r\n\tassert.equal(Data($target3).cache.paddingLeft, parseFloat(testStartValues.paddingLeft), \"Start value #1 wasn't unit converted.\");\r\n\tassert.equal(Data($target3).cache.height, parseFloat(testStartValues.height), \"Start value #2 wasn't unit converted.\");\r\n\t//\t\t\tassert.deepEqual(Data($target3).cache.paddingRight.startValue, [Math.floor((parentWidth * parseFloat(testStartValues.paddingRight)) / 100), 0],\r\n\t//\t\t\t \"Start value #3 was pattern matched.\");\r\n\r\n\t/* Properties that should cause start values to be unit-converted. */\r\n\tconst testPropertiesEndConvert = {paddingLeft: \"20%\", height: \"40%\", lineHeight: \"0.5em\", wordSpacing: \"2rem\", marginLeft: \"10vw\", marginTop: \"5vh\", marginBottom: \"100px\"},\r\n\t\tparentWidth = $qunitStage.clientWidth,\r\n\t\tparentHeight = $qunitStage.clientHeight,\r\n\t\tparentFontSize = Velocity($qunitStage, \"style\", \"fontSize\"),\r\n\t\tremSize = parseFloat(Velocity(document.body, \"style\", \"fontSize\") as any),\r\n\t\t$target4 = getTarget();\r\n\r\n\tapplyStartValues($target4, testStartValues);\r\n\tVelocity($target4, testPropertiesEndConvert);\r\n\r\n\t/* Long decimal results can be returned after unit conversion, and Velocity's code and the code here can differ in precision. So, we round floor values before comparison. */\r\n\t//\t\t\tassert.deepEqual(Data($target4).cache.paddingLeft.startValue, [parseFloat(testStartValues.paddingLeft), 0],\r\n\t//\t\t\t \"Horizontal property converted to %.\");\r\n\tassert.equal(parseInt(Data($target4).cache.height, 10), Math.floor((parseFloat(testStartValues.height) / parentHeight) * 100), \"Vertical property converted to %.\");\r\n\t//\t\t\tassert.equal(Data($target4).cache.lineHeight.startValue, Math.floor(parseFloat(testStartValues.lineHeight) / parseFloat(parentFontSize)),\r\n\t//\t\t\t \"Property converted to em.\");\r\n\t//\t\t\tassert.equal(Data($target4).cache.wordSpacing.startValue, Math.floor(parseFloat(testStartValues.wordSpacing) / parseFloat(remSize)),\r\n\t//\t\t\t \"Property converted to rem.\");\r\n\tassert.equal(parseInt(Data($target4).cache.marginBottom, 10), parseFloat(testStartValues.marginBottom) / 100 * parseFloat($target4.parentElement.offsetWidth as any),\r\n\t\t\"Property converted to px.\");\r\n\r\n\t//\t\t\tif (!(IE<=8) && !isAndroid) {\r\n\t//\t\t\t\tassert.equal(Data($target4).cache.marginLeft.startValue, Math.floor(parseFloat(testStartValues.marginLeft) / window.innerWidth * 100),\r\n\t//\t\t\t\t \"Horizontal property converted to vw.\");\r\n\t//\t\t\t\tassert.equal(Data($target4).cache.marginTop.startValue, Math.floor(parseFloat(testStartValues.marginTop) / window.innerHeight * 100),\r\n\t//\t\t\t\t \"Vertical property converted to vh.\");\r\n\t//\t\t\t}\r\n\r\n\t// TODO: Tests for auto-parameters as the units are no longer converted.\r\n\r\n\t/* jQuery TRBL deferring. */\r\n\tconst testPropertiesTRBL = {left: \"1000px\"},\r\n\t\t$TRBLContainer = document.createElement(\"div\");\r\n\r\n\t$TRBLContainer.setAttribute(\"id\", \"TRBLContainer\");\r\n\t$TRBLContainer.style.marginLeft = testPropertiesTRBL.left;\r\n\t$TRBLContainer.style.width = \"100px\";\r\n\t$TRBLContainer.style.height = \"100px\";\r\n\tdocument.body.appendChild($TRBLContainer);\r\n\r\n\tconst $target5 = getTarget();\r\n\r\n\t$target5.style.position = \"absolute\";\r\n\t$TRBLContainer.appendChild($target5);\r\n\tVelocity($target5, testPropertiesTRBL);\r\n\r\n\tassert.equal(parseInt(Data($target5).cache.left, 10),\r\n\t\tMath.round(parseFloat(testPropertiesTRBL.left) + parseFloat(Velocity(document.body, \"style\", \"marginLeft\") as any)),\r\n\t\t\"TRBL value was deferred to jQuery.\");\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {asyncTests, getPropertyValue, getTarget, sleep} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.test(\"Unit Calculation\", (assert) => {\r\n\t// TODO: Add code and tests for operators - probably using calc() internally\r\n\t//\t/* Standard properties with operators. */\r\n\t//\tvar testIncrementWidth = \"5px\",\r\n\t//\t\t\ttestDecrementOpacity = 0.25,\r\n\t//\t\t\ttestMultiplyMarginBottom = 4,\r\n\t//\t\t\ttestDivideHeight = 2;\r\n\t//\r\n\t//\tvar $target2 = getTarget();\r\n\t//\tVelocity($target2, {width: \"+=\" + testIncrementWidth, opacity: \"-=\" + testDecrementOpacity, marginBottom: \"*=\" + testMultiplyMarginBottom, height: \"/=\" + testDivideHeight});\r\n\t//\tsetTimeout(function() {\r\n\t//\r\n\t//\t\tassert.equal(Data($target2).style.width.endValue, defaultStyles.width + parseFloat(testIncrementWidth), \"Incremented end value was calculated.\");\r\n\t//\t\tassert.equal(Data($target2).style.opacity.endValue, defaultStyles.opacity - testDecrementOpacity, \"Decremented end value was calculated.\");\r\n\t//\t\tassert.equal(Data($target2).style.marginBottom.endValue, defaultStyles.marginBottom * testMultiplyMarginBottom, \"Multiplied end value was calculated.\");\r\n\t//\t\tassert.equal(Data($target2).style.height.endValue, defaultStyles.height / testDivideHeight, \"Divided end value was calculated.\");\r\n\t//\r\n\t//\t\tdone();\r\n\t//\t}, asyncCheckDuration);\r\n\r\n\tasyncTests(assert, 2, async (done) => {\r\n\t\tconst $target = getTarget();\r\n\r\n\t\tVelocity($target, {left: \"500px\"}, {duration: 10});\r\n\t\tawait sleep(100);\r\n\t\tassert.equal(getPropertyValue($target, \"left\"), \"500px\", \"Finished animated value with given pixels should be the same.\");\r\n\t\tVelocity($target, {left: \"0px\"}, {duration: 10});\r\n\t\tawait sleep(100);\r\n\t\tassert.equal(getPropertyValue($target, \"left\"), \"0px\", \"Finished animated value with 0px should be the same.\");\r\n\r\n\t\tdone();\r\n\t});\r\n\r\n\t//\tasync(assert, 1, async (done) => {\r\n\t//\t\tconst $target = getTarget();\r\n\t//\r\n\t//\t\tVelocity($target, {left: \"500px\"}, {duration: 10});\r\n\t//\t\tawait sleep(100);\r\n\t//\t\tVelocity($target, {left: \"0\"}, {duration: 10});\r\n\t//\t\tawait sleep(100);\r\n\t//\t\tassert.equal(getPropertyValue($target, \"left\"), \"0px\", \"Finished animated value without giving px, but only number as a string should be the same.\");\r\n\t//\r\n\t//\t\tdone();\r\n\t//\t});\r\n\r\n\tasyncTests(assert, 1, async (done) => {\r\n\t\tconst $target = getTarget();\r\n\r\n\t\tVelocity($target, {left: \"500px\"}, {duration: 10});\r\n\t\tawait sleep(100);\r\n\t\tVelocity($target, {left: 0}, {duration: 10});\r\n\t\tawait sleep(1000);\r\n\t\tassert.equal(getPropertyValue($target, \"left\"), \"0px\", \"Finished animated value given as number 0 should be the same as 0px.\");\r\n\r\n\t\tdone();\r\n\t});\r\n\r\n\tasyncTests(assert, 2, async (done) => {\r\n\t\tconst $target = getTarget();\r\n\r\n\t\tVelocity($target, {left: 500}, {duration: 10});\r\n\t\tawait sleep(100);\r\n\t\tassert.equal(getPropertyValue($target, \"left\"), \"500px\", \"Finished animated value with given pixels should be the same.\");\r\n\t\tVelocity($target, {left: 0}, {duration: 10});\r\n\t\tawait sleep(100);\r\n\t\tassert.equal(getPropertyValue($target, \"left\"), \"0px\", \"Omitted pixels (px) when given animation should run properly.\");\r\n\r\n\t\tdone();\r\n\t});\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nQUnit.module(\"Option\");\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {asyncCheckDuration, asyncTests, defaultProperties, getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.test(\"Begin\", (assert) => {\r\n\tasyncTests(assert, 1, (done) => {\r\n\t\tconst $targetSet = [getTarget(), getTarget()];\r\n\r\n\t\tVelocity($targetSet, defaultProperties, {\r\n\t\t\tduration: asyncCheckDuration,\r\n\t\t\tbegin(elements) {\r\n\t\t\t\tassert.deepEqual(elements, $targetSet, \"Elements passed into callback.\");\r\n\r\n\t\t\t\tdone();\r\n\t\t\t},\r\n\t\t});\r\n\t});\r\n\r\n\tassert.expect(asyncTests());\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {asyncCheckDuration, asyncTests, defaultProperties, getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.test(\"Complete\", (assert) => {\r\n\tasyncTests(assert, 1, (done) => {\r\n\t\tconst $targetSet = [getTarget(), getTarget()];\r\n\r\n\t\tVelocity($targetSet, defaultProperties, {\r\n\t\t\tduration: asyncCheckDuration,\r\n\t\t\tcomplete(elements) {\r\n\t\t\t\tassert.deepEqual(elements, $targetSet, \"Elements passed into callback.\");\r\n\r\n\t\t\t\tdone();\r\n\t\t\t},\r\n\t\t});\r\n\t});\r\n\r\n\tassert.expect(asyncTests());\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {asyncTests, defaultOptions, defaultProperties, getNow, getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.test(\"Delay\", (assert) => {\r\n\tconst testDelay = 250;\r\n\r\n\tasyncTests(assert, 1, (done) => {\r\n\t\tconst start = getNow();\r\n\r\n\t\tVelocity(getTarget(), defaultProperties, {\r\n\t\t\tduration: defaultOptions.duration,\r\n\t\t\tdelay: testDelay,\r\n\t\t\tbegin(elements, activeCall) {\r\n\t\t\t\tassert.close(getNow() - start, testDelay, 32, \"Delayed calls start after the correct delay.\");\r\n\r\n\t\t\t\tdone();\r\n\t\t\t},\r\n\t\t});\r\n\t});\r\n\r\n\tasyncTests(assert, 1, (done) => {\r\n\t\tconst start = getNow();\r\n\r\n\t\tVelocity(getTarget(), defaultProperties, {\r\n\t\t\tduration: defaultOptions.duration,\r\n\t\t\tdelay: testDelay,\r\n\t\t})\r\n\t\t\t.velocity(defaultProperties, {\r\n\t\t\t\tduration: defaultOptions.duration,\r\n\t\t\t\tdelay: testDelay,\r\n\t\t\t\tbegin(elements, activeCall) {\r\n\t\t\t\t\tassert.close(getNow() - start, (testDelay * 2) + (defaultOptions.duration as number), 32, \"Queued delays start after the correct delay.\");\r\n\r\n\t\t\t\t\tdone();\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t});\r\n\r\n\tassert.expect(asyncTests());\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity, {VelocityResult} from \"velocity-animate\";\r\nimport {asyncCheckDuration, asyncTests, defaultProperties, getTarget, once} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.test(\"Easing\", (assert) => {\r\n\tasyncTests(assert, 1, (done) => {\r\n\t\tlet success = false;\r\n\r\n\t\ttry {\r\n\t\t\tsuccess = true;\r\n\t\t\tVelocity(getTarget(), defaultProperties, {easing: \"fake\"});\r\n\t\t} catch (e) {\r\n\t\t\tsuccess = false;\r\n\t\t}\r\n\t\tassert.ok(success, \"Fake easing string didn't throw error.\");\r\n\r\n\t\tdone();\r\n\t});\r\n\r\n\tasyncTests(assert, 1, (done) => {\r\n\t\tlet success = false;\r\n\r\n\t\ttry {\r\n\t\t\tsuccess = true;\r\n\t\t\tVelocity(getTarget(), defaultProperties, {easing: [\"a\" as any, 0.5, 0.5, 0.5]});\r\n\t\t\tVelocity(getTarget(), defaultProperties, {easing: [0.5, 0.5, 0.5]});\r\n\t\t} catch (e) {\r\n\t\t\tsuccess = false;\r\n\t\t}\r\n\t\tassert.ok(success, \"Invalid bezier curve didn't throw error.\");\r\n\r\n\t\tdone();\r\n\t});\r\n\r\n\tasyncTests(assert, 1, (done) => {\r\n\t\t// TODO: Use a \"tween\" action?\r\n\t\t/* Ensure that a properly-formatted bezier curve array returns a bezier function. */\r\n\t\tconst easingBezierArray = [0.27, -0.65, 0.78, 0.19],\r\n\t\t\teasingBezierTestPercent = 0.25,\r\n\t\t\teasingBezierTestValue = -0.23;\r\n\r\n\t\tVelocity(getTarget(), defaultProperties, {\r\n\t\t\teasing: easingBezierArray,\r\n\t\t\tbegin(elements, animation) {\r\n\t\t\t\tassert.close(animation.options.easing(easingBezierTestPercent, 0, 1), easingBezierTestValue, 0.005, \"Array converted into bezier function.\");\r\n\r\n\t\t\t\tdone();\r\n\t\t\t},\r\n\t\t});\r\n\t});\r\n\r\n\tasyncTests(assert, 1, (done) => {\r\n\t\t/* Ensure that a properly-formatted spring RK4 array returns a bezier function. */\r\n\t\tconst easingSpringRK4Array = [250, 12],\r\n\t\t\teasingSpringRK4TestPercent = 0.25,\r\n\t\t\teasingSpringRK4TestValue = 0.928, // TODO: Check accuracy\r\n\t\t\teasingSpringRK4TestDuration = 992;\r\n\r\n\t\tVelocity(getTarget(), defaultProperties, {\r\n\t\t\tduration: 150,\r\n\t\t\teasing: easingSpringRK4Array,\r\n\t\t\tbegin(elements, animation) {\r\n\t\t\t\tassert.close(animation.options.easing(easingSpringRK4TestPercent, 0, 1), easingSpringRK4TestValue, 10, \"Array with duration converted into springRK4 function.\");\r\n\r\n\t\t\t\tdone();\r\n\t\t\t},\r\n\t\t});\r\n\t});\r\n\r\n\t// TODO: Get this working in Velocity - so it can be tested\r\n\t//\tasync(assert, 1, (done) => {\r\n\t//\tVelocity(getTarget(), defaultProperties, {\r\n\t//\t\teasing: easingSpringRK4Array,\r\n\t//\t\tbegin(elements, animation) {\r\n\t//\t\t\tassert.equal(animation.duration, easingSpringRK4TestDuration, \"Array without duration converted into springRK4 duration.\");\r\n\t//\t\t\tdone();\r\n\t//\t\t}\r\n\t//\t});\r\n\t//\t});\r\n\r\n\tasyncTests(assert, 1, (done) => {\r\n\t\t/* Ensure that a properly-formatted step easing array returns a step function. */\r\n\t\tconst easingStepArray = [4],\r\n\t\t\teasingStepTestPercent = 0.35,\r\n\t\t\teasingStepTestValue = 0.25;\r\n\r\n\t\tVelocity(getTarget(), defaultProperties, {\r\n\t\t\teasing: easingStepArray,\r\n\t\t\tbegin(elements, animation) {\r\n\t\t\t\tassert.close(animation.options.easing(easingStepTestPercent, 0, 1), easingStepTestValue, 0.05, \"Array converted into Step function.\");\r\n\t\t\t\tdone();\r\n\t\t\t},\r\n\t\t});\r\n\t});\r\n\r\n\tasyncTests(assert, 3, (done) => {\r\n\t\tVelocity(getTarget(), {opacity: [0, \"during\", 1]}, {\r\n\t\t\tduration: asyncCheckDuration,\r\n\t\t\tbegin(elements) {\r\n\t\t\t\tassert.equal(elements.velocity(\"style\", \"opacity\"), 1, \"Correct begin value (easing:'during').\");\r\n\t\t\t},\r\n\t\t\tprogress: once((elements: VelocityResult) => {\r\n\t\t\t\tassert.equal(elements.velocity(\"style\", \"opacity\"), 0, \"Correct progress value (easing:'during').\");\r\n\t\t\t}),\r\n\t\t\tcomplete(elements) {\r\n\t\t\t\tassert.equal(elements.velocity(\"style\", \"opacity\"), 1, \"Correct complete value (easing:'during').\");\r\n\r\n\t\t\t\tdone();\r\n\t\t\t},\r\n\t\t});\r\n\t});\r\n\r\n\tasyncTests(assert, 3, (done) => {\r\n\t\tVelocity(getTarget(), {opacity: [0, \"at-start\", 1]}, {\r\n\t\t\tduration: asyncCheckDuration,\r\n\t\t\tbegin(elements) {\r\n\t\t\t\tassert.equal(elements.velocity(\"style\", \"opacity\"), 1, \"Correct begin value (easing:'at-start').\");\r\n\t\t\t},\r\n\t\t\tprogress: once((elements: VelocityResult) => {\r\n\t\t\t\tassert.equal(elements.velocity(\"style\", \"opacity\"), 0, \"Correct progress value (easing:'at-start').\");\r\n\t\t\t}),\r\n\t\t\tcomplete(elements) {\r\n\t\t\t\tassert.equal(elements.velocity(\"style\", \"opacity\"), 0, \"Correct complete value (easing:'at-start').\");\r\n\r\n\t\t\t\tdone();\r\n\t\t\t},\r\n\t\t});\r\n\t});\r\n\r\n\tasyncTests(assert, 3, (done) => {\r\n\t\tVelocity(getTarget(), {opacity: [0, \"at-end\", 1]}, {\r\n\t\t\tduration: asyncCheckDuration,\r\n\t\t\tbegin(elements) {\r\n\t\t\t\tassert.equal(elements.velocity(\"style\", \"opacity\"), 1, \"Correct begin value (easing:'at-end').\");\r\n\t\t\t},\r\n\t\t\tprogress: once((elements: VelocityResult) => {\r\n\t\t\t\tassert.equal(elements.velocity(\"style\", \"opacity\"), 1, \"Correct progress value (easing:'at-end').\");\r\n\t\t\t}),\r\n\t\t\tcomplete(elements) {\r\n\t\t\t\tassert.equal(elements.velocity(\"style\", \"opacity\"), 0, \"Correct complete value (easing:'at-end').\");\r\n\r\n\t\t\t\tdone();\r\n\t\t\t},\r\n\t\t});\r\n\t});\r\n\r\n\tassert.expect(asyncTests());\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {defaultProperties, getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.test(\"FPS Limit\", async (assert) => {\r\n\tlet count: number;\r\n\tconst $target = getTarget(),\r\n\t\tframeRates = [5, 15, 30, 60],\r\n\t\ttestFrame = (frameRate) => {\r\n\t\t\tlet counter = 0;\r\n\r\n\t\t\tVelocity.defaults.fpsLimit = frameRate;\r\n\t\t\t// Test if the frame rate is assigned succesfully.\r\n\t\t\tassert.equal(frameRate, Velocity.defaults.fpsLimit, \"Setting global fps limit to \" + frameRate);\r\n\r\n\t\t\treturn Velocity($target, defaultProperties,\r\n\t\t\t\t{\r\n\t\t\t\t\tduration: 1000,\r\n\t\t\t\t\tprogress() {\r\n\t\t\t\t\t\tcounter++;\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => counter);\r\n\t\t};\r\n\r\n\tassert.expect(frameRates.length * 2);\r\n\t// Test if the limit is working for 60, 30, 15 and 5 fps.\r\n\tfor (const frameRate of frameRates) {\r\n\t\tassert.ok((count = await testFrame(frameRate)) <= frameRate + 1, `...counted ${count} frames (\\xB11 frame)`);\r\n\t}\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {asyncTests, defaultProperties, getNow, getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.test(\"Loop\", (assert) => {\r\n\tasyncTests(assert, 4, (done) => {\r\n\t\tconst testOptions = {loop: 2, delay: 100, duration: 100},\r\n\t\t\tstart = getNow();\r\n\t\tlet begin = 0,\r\n\t\t\tcomplete = 0,\r\n\t\t\tloop = 0,\r\n\t\t\tlastPercentComplete = 2;\r\n\r\n\t\tVelocity(getTarget(), defaultProperties,\r\n\t\t\t{\r\n\t\t\t\tloop: testOptions.loop,\r\n\t\t\t\tdelay: testOptions.delay,\r\n\t\t\t\tduration: testOptions.duration,\r\n\t\t\t\tbegin() {\r\n\t\t\t\t\tbegin++;\r\n\t\t\t\t},\r\n\t\t\t\tprogress(elements, percentComplete) {\r\n\t\t\t\t\tif (lastPercentComplete > percentComplete) {\r\n\t\t\t\t\t\tloop++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlastPercentComplete = percentComplete;\r\n\t\t\t\t},\r\n\t\t\t\tcomplete() {\r\n\t\t\t\t\tcomplete++;\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tassert.equal(begin, 1, \"Begin callback only called once.\");\r\n\t\t\t\tassert.equal(loop, testOptions.loop * 2 - 1, \"Animation looped correct number of times (once each direction per loop).\");\r\n\t\t\t\tassert.close(getNow() - start, (testOptions.delay + testOptions.duration) * loop, 32, \"Looping with 'delay' has correct duration.\");\r\n\t\t\t\tassert.equal(complete, 1, \"Complete callback only called once.\");\r\n\r\n\t\t\t\tdone();\r\n\t\t\t});\r\n\t});\r\n\r\n\tassert.expect(asyncTests());\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {asyncCheckDuration, asyncTests, defaultProperties, getTarget, once} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.test(\"Progress\", (assert) => {\r\n\tasyncTests(assert, 4, (done) => {\r\n\t\tconst $target = getTarget();\r\n\r\n\t\tVelocity($target, defaultProperties, {\r\n\t\t\tduration: asyncCheckDuration,\r\n\t\t\tprogress: once(function(elements, percentComplete, msRemaining) { // tslint:disable-line:only-arrow-functions\r\n\t\t\t\tassert.deepEqual(elements, [$target], \"Elements passed into progress.\");\r\n\t\t\t\tassert.deepEqual(this, [$target], \"Elements passed into progress as this.\"); // tslint:disable-line:no-invalid-this\r\n\t\t\t\tassert.equal(percentComplete >= 0 && percentComplete <= 1, true, \"'percentComplete' passed into progress.\");\r\n\t\t\t\tassert.equal(msRemaining > asyncCheckDuration - 50, true, \"'msRemaining' passed into progress.\");\r\n\r\n\t\t\t\tdone();\r\n\t\t\t}),\r\n\t\t});\r\n\t});\r\n\r\n\tassert.expect(asyncTests());\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {Data, defaultProperties, getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.test(\"Queue\", (assert) => {\r\n\tconst done = assert.async(4),\r\n\t\ttestQueue = \"custom\",\r\n\t\t$target = getTarget(),\r\n\t\tignore = $target.velocity(\"style\", \"display\"), // Force data creation\r\n\t\tdata = Data($target);\r\n\tlet anim1: boolean,\r\n\t\tanim2: boolean,\r\n\t\tanim3: boolean;\r\n\r\n\tassert.expect(7);\r\n\r\n\tassert.ok(data.queueList[testQueue] === undefined, \"Custom queue is empty.\"); // Shouldn't exist\r\n\r\n\t$target.velocity(defaultProperties, {\r\n\t\tqueue: testQueue,\r\n\t\tbegin() {\r\n\t\t\tanim1 = true;\r\n\t\t},\r\n\t\tcomplete() {\r\n\t\t\tanim1 = false;\r\n\t\t\tassert.ok(!anim2, \"Queued animation isn't started early.\");\r\n\r\n\t\t\tdone();\r\n\t\t},\r\n\t});\r\n\tassert.ok(data.queueList[testQueue] !== undefined, \"Custom queue was created.\"); // Should exist, but be \"null\"\r\n\r\n\t$target.velocity(defaultProperties, {\r\n\t\tqueue: testQueue,\r\n\t\tbegin() {\r\n\t\t\tanim2 = true;\r\n\t\t\tassert.ok(anim1 === false, \"Queued animation starts after first.\");\r\n\r\n\t\t\tdone();\r\n\t\t},\r\n\t\tcomplete() {\r\n\t\t\tanim2 = false;\r\n\t\t},\r\n\t});\r\n\tassert.ok(data.queueList[testQueue], \"Custom queue grows.\"); // Should exist and point at the next animation\r\n\r\n\t$target.velocity(defaultProperties, {\r\n\t\tbegin() {\r\n\t\t\tanim3 = true;\r\n\t\t\tassert.ok(anim1 === true, \"Different queue animation starts in parallel.\");\r\n\r\n\t\t\tdone();\r\n\t\t},\r\n\t\tcomplete() {\r\n\t\t\tanim3 = false;\r\n\t\t},\r\n\t});\r\n\r\n\t$target.velocity(defaultProperties, {\r\n\t\tqueue: false,\r\n\t\tbegin() {\r\n\t\t\tassert.ok(anim1 === true, \"Queue:false animation starts in parallel.\");\r\n\r\n\t\t\tdone();\r\n\t\t},\r\n\t});\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {asyncTests, defaultProperties, getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.test(\"Repeat\", (assert) => {\r\n\tasyncTests(assert, 4, (done) => {\r\n\t\tconst testOptions = {repeat: 2, delay: 100, duration: 100},\r\n\t\t\tstart = Date.now();\r\n\t\tlet begin = 0,\r\n\t\t\tcomplete = 0,\r\n\t\t\trepeat = 0;\r\n\r\n\t\tVelocity(getTarget(), defaultProperties, {\r\n\t\t\trepeat: testOptions.repeat,\r\n\t\t\tdelay: testOptions.delay,\r\n\t\t\tduration: testOptions.duration,\r\n\t\t\tbegin() {\r\n\t\t\t\tbegin++;\r\n\t\t\t},\r\n\t\t\tprogress(elements, percentComplete) {\r\n\t\t\t\tif (percentComplete === 1) {\r\n\t\t\t\t\trepeat++;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcomplete() {\r\n\t\t\t\tcomplete++;\r\n\t\t\t\tassert.equal(begin, 1, \"Begin callback only called once.\");\r\n\t\t\t\tassert.equal(repeat, testOptions.repeat + 1, \"Animation repeated correct number of times (original plus repeats).\");\r\n\t\t\t\tassert.close(Date.now() - start, (testOptions.delay + testOptions.duration) * (testOptions.repeat + 1), (testOptions.repeat + 1) * 16 + 32,\r\n\t\t\t\t\t\"Repeat with 'delay' has correct duration.\");\r\n\t\t\t\tassert.equal(complete, 1, \"Complete callback only called once.\");\r\n\r\n\t\t\t\tdone();\r\n\t\t\t},\r\n\t\t});\r\n\t});\r\n\r\n\tassert.expect(asyncTests());\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity, {VelocityExtended} from \"velocity-animate\";\r\nimport {asyncTests, defaultProperties, getNow, getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\ninterface ExtendedVelocityExtended extends VelocityExtended {\r\n\t__count?: number;\r\n\t__start?: number;\r\n}\r\n\r\nQUnit.test(\"Speed\", (assert) => {\r\n\tconst delay = 200,\r\n\t\tduration = 400,\r\n\t\tstartDelay = getNow();\r\n\r\n\tasyncTests(assert, 1, (done) => {\r\n\t\tVelocity.defaults.speed = 3;\r\n\t\tVelocity(getTarget(), defaultProperties, {\r\n\t\t\tspeed: 5,\r\n\t\t\tbegin(elements) {\r\n\t\t\t\tassert.equal(elements.velocity.animations[0].options.speed, 5, \"Speed on options overrides default.\");\r\n\r\n\t\t\t\tdone();\r\n\t\t\t},\r\n\t\t});\r\n\t});\r\n\r\n\tasyncTests(assert, 1, (done) => {\r\n\t\tVelocity(getTarget(), defaultProperties, {\r\n\t\t\tduration,\r\n\t\t\tbegin(elements: ExtendedVelocityExtended) {\r\n\t\t\t\telements.__start = getNow();\r\n\t\t\t},\r\n\t\t\tcomplete(elements: ExtendedVelocityExtended) {\r\n\t\t\t\tconst actual = getNow() - elements.__start,\r\n\t\t\t\t\texpected = duration / 3;\r\n\r\n\t\t\t\tassert.close(actual, expected, 32, `Velocity.defaults.speed change is respected. (\\xD73, ${Math.floor(actual - expected)}ms \\xB132ms)`);\r\n\r\n\t\t\t\tdone();\r\n\t\t\t},\r\n\t\t});\r\n\t});\r\n\r\n\tasyncTests(assert, 1, (done) => {\r\n\t\tVelocity(getTarget(), defaultProperties, {\r\n\t\t\tduration,\r\n\t\t\tspeed: 2,\r\n\t\t\tbegin(elements: ExtendedVelocityExtended) {\r\n\t\t\t\telements.__start = getNow();\r\n\t\t\t},\r\n\t\t\tcomplete(elements: ExtendedVelocityExtended) {\r\n\t\t\t\tconst actual = getNow() - elements.__start,\r\n\t\t\t\t\texpected = duration / 2;\r\n\r\n\t\t\t\tassert.close(actual, expected, 32, `Double speed animation lasts half as long. (\\xD72, ${Math.floor(actual - expected)}ms \\xB132ms)`);\r\n\r\n\t\t\t\tdone();\r\n\t\t\t},\r\n\t\t});\r\n\t});\r\n\r\n\tasyncTests(assert, 1, (done) => {\r\n\t\tVelocity(getTarget(), defaultProperties, {\r\n\t\t\tduration,\r\n\t\t\tdelay,\r\n\t\t\tspeed: 2,\r\n\t\t\tbegin(elements: ExtendedVelocityExtended) {\r\n\t\t\t\telements.__start = startDelay;\r\n\t\t\t},\r\n\t\t\tcomplete(elements: ExtendedVelocityExtended) {\r\n\t\t\t\tconst actual = getNow() - elements.__start,\r\n\t\t\t\t\texpected = (duration + delay) / 2;\r\n\r\n\t\t\t\tassert.close(actual, expected, 32, `Delayed animation includes speed for delay. (\\xD72, ${Math.floor(actual - expected)}ms \\xB132ms)`);\r\n\r\n\t\t\t\tdone();\r\n\t\t\t},\r\n\t\t});\r\n\t});\r\n\r\n\tasyncTests(assert, 1, (done) => {\r\n\t\tVelocity(getTarget(), defaultProperties, {\r\n\t\t\tduration,\r\n\t\t\tdelay: -delay,\r\n\t\t\tspeed: 2,\r\n\t\t\tbegin(elements: ExtendedVelocityExtended) {\r\n\t\t\t\telements.__start = startDelay;\r\n\t\t\t},\r\n\t\t\tcomplete(elements: ExtendedVelocityExtended) {\r\n\t\t\t\tconst actual = getNow() - elements.__start,\r\n\t\t\t\t\texpected = (duration - delay) / 2;\r\n\r\n\t\t\t\tassert.close(actual, expected, 32, `Negative delay animation includes speed for delay. (\\xD72, ${Math.floor(actual - expected)}ms \\xB132ms)`);\r\n\r\n\t\t\t\tdone();\r\n\t\t\t},\r\n\t\t});\r\n\t});\r\n\r\n\tasyncTests(assert, 1, (done) => {\r\n\t\tVelocity(getTarget(), defaultProperties, {\r\n\t\t\tduration,\r\n\t\t\tspeed: 0.5,\r\n\t\t\tbegin(elements: ExtendedVelocityExtended) {\r\n\t\t\t\telements.__start = getNow();\r\n\t\t\t},\r\n\t\t\tcomplete(elements: ExtendedVelocityExtended) {\r\n\t\t\t\tconst actual = getNow() - elements.__start,\r\n\t\t\t\t\texpected = duration * 2;\r\n\r\n\t\t\t\t// TODO: Really not happy with the allowed range - it sits around 40ms, but should be closer to 16ms\r\n\t\t\t\tassert.close(actual, expected, 64, `Half speed animation lasts twice as long. (\\xD7\\xBD, ${Math.floor(actual - expected)}ms \\xB164ms)`);\r\n\r\n\t\t\t\tdone();\r\n\t\t\t},\r\n\t\t});\r\n\t});\r\n\r\n\tasyncTests(assert, 1, (done) => {\r\n\t\tVelocity(getTarget(), defaultProperties, {\r\n\t\t\tduration,\r\n\t\t\tspeed: 0,\r\n\t\t\tprogress(elements: ExtendedVelocityExtended, percentComplete) {\r\n\t\t\t\tif (!elements.__count) {\r\n\t\t\t\t\telements.__start = percentComplete;\r\n\t\t\t\t\telements.__count = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tassert.equal(elements.__start, percentComplete, \"Frozen (speed:0) animation doesn't progress.\");\r\n\t\t\t\t\telements\r\n\t\t\t\t\t\t.velocity(\"option\", \"speed\", 1) // Just in case \"stop\" is broken\r\n\t\t\t\t\t\t.velocity(\"stop\");\r\n\r\n\t\t\t\t\tdone();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t});\r\n\t});\r\n\r\n\tassert.expect(asyncTests());\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {asyncTests, defaultProperties, getTarget, sleep} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.test(\"Sync\", (assert) => {\r\n\tasyncTests(assert, 1, async (done) => {\r\n\t\tconst $target = getTarget(),\r\n\t\t\t$targetSet = [getTarget(), $target, getTarget()];\r\n\t\tlet complete = false;\r\n\r\n\t\tVelocity($target, defaultProperties, {\r\n\t\t\tduration: 300,\r\n\t\t\tcomplete() {\r\n\t\t\t\tcomplete = true;\r\n\t\t\t},\r\n\t\t});\r\n\t\tVelocity($targetSet, defaultProperties, {\r\n\t\t\tsync: false,\r\n\t\t\tduration: 250,\r\n\t\t});\r\n\t\tawait sleep(275);\r\n\t\tassert.notOk(complete, \"Sync 'false' animations don't wait for completion.\");\r\n\r\n\t\tdone();\r\n\t});\r\n\r\n\tasyncTests(assert, 1, async (done) => {\r\n\t\tconst $target = getTarget(),\r\n\t\t\t$targetSet = [getTarget(), $target, getTarget()];\r\n\t\tlet complete = false;\r\n\r\n\t\tVelocity($target, defaultProperties, {\r\n\t\t\tduration: 300,\r\n\t\t\tcomplete() {\r\n\t\t\t\tcomplete = true;\r\n\t\t\t},\r\n\t\t});\r\n\t\tVelocity($targetSet, defaultProperties, {\r\n\t\t\tsync: true,\r\n\t\t\tduration: 250,\r\n\t\t\tbegin() {\r\n\t\t\t\tassert.ok(complete, \"Sync 'true' animations wait for completion.\");\r\n\r\n\t\t\t\tdone();\r\n\t\t\t},\r\n\t\t});\r\n\t});\r\n\r\n\tassert.expect(asyncTests());\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nQUnit.module(\"Command\");\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {asyncTests, defaultOptions, defaultProperties, getPropertyValue, getTarget, sleep} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.test(\"Finish\", async (assert) => {\r\n\tasyncTests(assert, 1, (done) => {\r\n\t\tVelocity(getTarget(), \"finish\");\r\n\t\tassert.ok(true, \"Calling on an element that isn't animating doesn't cause an error.\");\r\n\r\n\t\tdone();\r\n\t});\r\n\r\n\tasyncTests(assert, 1, (done) => {\r\n\t\tconst $target = getTarget();\r\n\r\n\t\tVelocity($target, defaultProperties, defaultOptions);\r\n\t\tVelocity($target, {top: 0}, defaultOptions);\r\n\t\tVelocity($target, {width: 0}, defaultOptions);\r\n\t\tVelocity($target, \"finish\");\r\n\t\tassert.ok(true, \"Calling on an element that is animating doesn't cause an error.\");\r\n\r\n\t\tdone();\r\n\t});\r\n\r\n\tasyncTests(assert, 2, async (done) => {\r\n\t\tconst $target = getTarget();\r\n\t\tlet complete1 = false,\r\n\t\t\tcomplete2 = false;\r\n\r\n\t\tVelocity($target, {opacity: [0, 1]}, {\r\n\t\t\tqueue: \"test1\",\r\n\t\t\tcomplete() {\r\n\t\t\t\tcomplete1 = true;\r\n\t\t\t},\r\n\t\t});\r\n\t\tVelocity($target, {opacity: [0, 1]}, {\r\n\t\t\tqueue: \"test2\",\r\n\t\t\tcomplete() {\r\n\t\t\t\tcomplete2 = true;\r\n\t\t\t},\r\n\t\t});\r\n\t\tVelocity($target, \"finish\", \"test1\");\r\n\t\tawait sleep(defaultOptions.duration as number / 2);\r\n\t\tassert.ok(complete1, \"Finish animation with correct queue.\");\r\n\t\tassert.notOk(complete2, \"Don't finish animation with wrong queue.\");\r\n\r\n\t\tdone();\r\n\t});\r\n\r\n\tasyncTests(assert, 3, async (done) => {\r\n\t\tconst $target = getTarget();\r\n\t\tlet begin = false,\r\n\t\t\tcomplete = false;\r\n\r\n\t\tVelocity($target, {opacity: [0, 1]}, {\r\n\t\t\tbegin() {\r\n\t\t\t\tbegin = true;\r\n\t\t\t},\r\n\t\t\tcomplete() {\r\n\t\t\t\tcomplete = true;\r\n\t\t\t},\r\n\t\t});\r\n\t\tawait sleep(500);\r\n\t\tVelocity($target, \"finish\");\r\n\t\tassert.ok(begin, \"Finish calls 'begin()' callback without delay.\");\r\n\t\tassert.ok(complete, \"Finish calls 'complete()' callback without delay.\");\r\n\t\tassert.equal(getPropertyValue($target, \"opacity\"), \"0\", \"Finish animation with correct value.\");\r\n\r\n\t\tdone();\r\n\t});\r\n\r\n\tasyncTests(assert, 3, async (done) => {\r\n\t\tconst $target = getTarget();\r\n\t\tlet begin = false,\r\n\t\t\tcomplete = false;\r\n\r\n\t\tVelocity($target, {opacity: [0, 1]}, {\r\n\t\t\tdelay: 1000,\r\n\t\t\tbegin() {\r\n\t\t\t\tbegin = true;\r\n\t\t\t},\r\n\t\t\tcomplete() {\r\n\t\t\t\tcomplete = true;\r\n\t\t\t},\r\n\t\t});\r\n\t\tawait sleep(500);\r\n\t\tVelocity($target, \"finish\");\r\n\t\tassert.ok(begin, \"Finish calls 'begin()' callback with delay.\");\r\n\t\tassert.ok(complete, \"Finish calls 'complete()' callback with delay.\");\r\n\t\tassert.equal(getPropertyValue($target, \"opacity\"), \"0\", \"Finish animation with correct value before delay ends.\");\r\n\r\n\t\tdone();\r\n\t});\r\n\r\n\tasyncTests(assert, 3, async (done) => {\r\n\t\tconst $target = getTarget();\r\n\r\n\t\tVelocity($target, {opacity: 0})\r\n\t\t\t.velocity({opacity: 1})\r\n\t\t\t.velocity({opacity: 0.25})\r\n\t\t\t.velocity({opacity: 0.75})\r\n\t\t\t.velocity({opacity: 0.5});\r\n\t\tVelocity($target, \"finish\");\r\n\t\tassert.equal(getPropertyValue($target, \"opacity\"), \"0\", \"Finish once starts the second animation.\");\r\n\t\tVelocity($target, \"finish\");\r\n\t\tassert.equal(getPropertyValue($target, \"opacity\"), \"1\", \"Finish twice starts the third animation.\");\r\n\t\tVelocity($target, \"finish\", true);\r\n\t\tassert.equal(getPropertyValue($target, \"opacity\"), \"0.5\", \"Finish 'true' finishes all animations.\");\r\n\r\n\t\tdone();\r\n\t});\r\n\r\n\tassert.expect(asyncTests());\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {asyncTests, getPropertyValue, getTarget, sleep} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.test(\"Pause + Resume\", async (assert) => {\r\n\tasyncTests(assert, 2, (done) => {\r\n\t\tconst $target = getTarget();\r\n\r\n\t\tVelocity($target, \"pause\");\r\n\t\tassert.ok(true, \"Calling \\\"pause\\\" on an element that isn't animating doesn't cause an error.\");\r\n\t\tVelocity($target, \"resume\");\r\n\t\tassert.ok(true, \"Calling \\\"resume\\\" on an element that isn't animating doesn't cause an error.\");\r\n\r\n\t\tdone();\r\n\t});\r\n\r\n\tasyncTests(assert, 4, async (done) => {\r\n\t\tconst $target = getTarget();\r\n\t\tlet progress = false;\r\n\r\n\t\tVelocity($target, {opacity: 0}, {\r\n\t\t\tduration: 250,\r\n\t\t\tprogress() {\r\n\t\t\t\tprogress = true;\r\n\t\t\t},\r\n\t\t});\r\n\t\tVelocity($target, \"pause\");\r\n\t\tawait sleep(50);\r\n\t\tassert.equal(getPropertyValue($target, \"opacity\"), \"1\", \"Property value unchanged after pause.\");\r\n\t\tassert.notOk(progress, \"Progress callback not run during pause.\");\r\n\t\tVelocity($target, \"resume\");\r\n\t\tawait sleep(300);\r\n\t\tassert.equal(getPropertyValue($target, \"opacity\"), \"0\", \"Tween completed after pause/resume.\");\r\n\t\tassert.ok(progress, \"Progress callback run after pause.\");\r\n\r\n\t\tdone();\r\n\t});\r\n\r\n\tasyncTests(assert, 3, async (done) => {\r\n\t\tconst $target = getTarget();\r\n\r\n\t\tVelocity($target, {opacity: 0}, {duration: 250, delay: 250});\r\n\t\tVelocity($target, \"pause\");\r\n\t\tawait sleep(500);\r\n\t\tassert.equal(getPropertyValue($target, \"opacity\"), \"1\", \"Delayed property value unchanged after pause.\");\r\n\t\tVelocity($target, \"resume\");\r\n\t\tawait sleep(100);\r\n\t\tassert.equal(getPropertyValue($target, \"opacity\"), \"1\", \"Delayed tween did not start early after pause.\");\r\n\t\tawait sleep(500);\r\n\t\tassert.equal(getPropertyValue($target, \"opacity\"), \"0\", \"Delayed tween completed after pause/resume.\");\r\n\r\n\t\tdone();\r\n\t});\r\n\r\n\tasyncTests(assert, 1, async (done) => {\r\n\t\tconst $target = getTarget();\r\n\r\n\t\tVelocity($target, {opacity: 0}, {queue: \"test\", duration: 250});\r\n\t\tVelocity(\"pause\", \"test\");\r\n\t\tawait sleep(300);\r\n\t\tassert.equal(getPropertyValue($target, \"opacity\"), \"1\", \"Pause 'queue' works globally.\");\r\n\r\n\t\tdone();\r\n\t});\r\n\r\n\tasyncTests(assert, 1, async (done) => {\r\n\t\tconst $target = getTarget();\r\n\r\n\t\tVelocity($target, {opacity: 0})\r\n\t\t\t.velocity(\"pause\");\r\n\t\tawait sleep(300);\r\n\t\tassert.equal(getPropertyValue($target, \"opacity\"), \"1\", \"Chained pause only pauses chained tweens.\");\r\n\r\n\t\tdone();\r\n\t});\r\n\r\n\t// TODO: Better global tests, queue: false, named queues\r\n\r\n\t//\t/* Ensure proper behavior with queue:false  */\r\n\t//\tvar $target4 = getTarget();\r\n\t//\tVelocity($target4, {opacity: 0}, {duration: 200});\r\n\t//\r\n\t//\tvar isResumed = false;\r\n\t//\r\n\t//\tawait sleep(100);\r\n\t//\tVelocity($target4, \"pause\");\r\n\t//\tVelocity($target4, {left: -20}, {\r\n\t//\t\tduration: 100,\r\n\t//\t\teasing: \"linear\",\r\n\t//\t\tqueue: false,\r\n\t//\t\tbegin: function(elements) {\r\n\t//\t\t\tassert.ok(true, \"Animation with {queue:false} will run regardless of previously paused animations.\");\r\n\t//\t\t}\r\n\t//\t});\r\n\t//\r\n\t//\tVelocity($target4, {top: 20}, {\r\n\t//\t\tduration: 100,\r\n\t//\t\teasing: \"linear\",\r\n\t//\t\tbegin: function(elements) {\r\n\t//\t\t\tassert.ok(isResumed, \"Queued animation began after previously paused animation completed\");\r\n\t//\t\t}\r\n\t//\t});\r\n\t//\r\n\t//\tawait sleep(100);\r\n\t//\r\n\t//\tisResumed = true;\r\n\t//\tVelocity($target4, \"resume\");\r\n\t//\tawait sleep(100);\r\n\r\n\tassert.expect(asyncTests());\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {asyncTests, defaultProperties, getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.test(\"Reverse\", (assert) => {\r\n\tconst $target = getTarget(),\r\n\t\topacity = $target.velocity(\"style\", \"opacity\"),\r\n\t\t// Browsers don't always suffix, but Velocity does.\r\n\t\twidth = $target.velocity(\"style\", \"width\") === \"0\" ? \"0px\" : $target.velocity(\"style\", \"width\");\r\n\r\n\tasyncTests(assert, 2, (done) => {\r\n\t\tVelocity($target, defaultProperties, {\r\n\t\t\tcomplete(elements) {\r\n\t\t\t\tassert.equal(elements[0].velocity(\"style\", \"opacity\"), defaultProperties.opacity, `Initial property #1 set correctly. (${defaultProperties.opacity})`);\r\n\t\t\t\tassert.equal(elements[0].velocity(\"style\", \"width\"), defaultProperties.width, `Initial property #2 set correctly. (${defaultProperties.width})`);\r\n\r\n\t\t\t\tdone();\r\n\t\t\t},\r\n\t\t});\r\n\t});\r\n\r\n\tasyncTests(assert, 2, (done) => {\r\n\t\tVelocity($target, \"reverse\", {\r\n\t\t\tcomplete(elements) {\r\n\t\t\t\tassert.equal(elements[0].velocity(\"style\", \"opacity\"), opacity, `Reversed property #1 set correctly. (${opacity})`);\r\n\t\t\t\tassert.equal(elements[0].velocity(\"style\", \"width\"), width, `Reversed property #2 set correctly. (${width})`);\r\n\r\n\t\t\t\tdone();\r\n\t\t\t},\r\n\t\t});\r\n\t});\r\n\r\n\tasyncTests(assert, 2, (done) => {\r\n\t\tVelocity($target, \"reverse\", {\r\n\t\t\tcomplete(elements) {\r\n\t\t\t\tassert.equal(elements[0].velocity(\"style\", \"opacity\"), defaultProperties.opacity, `Chained reversed property #1 set correctly. (${defaultProperties.opacity})`);\r\n\t\t\t\tassert.equal(elements[0].velocity(\"style\", \"width\"), defaultProperties.width, `Chained reversed property #2 set correctly. (${defaultProperties.width})`);\r\n\r\n\t\t\t\tdone();\r\n\t\t\t},\r\n\t\t});\r\n\t});\r\n\r\n\tassert.expect(asyncTests());\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {asyncCheckDuration, asyncTests, defaultProperties, getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\n/* Window scrolling. */\r\nQUnit.skip(\"Scroll (Window)\", (assert) => {\r\n\t//\tvar done = assert.async(4),\r\n\t//\t\t$details = $(\"#details\"),\r\n\t//\t\t$scrollTarget1 = $(\"<div>Scroll target #1. Should stop 50 pixels above this point.</div>\"),\r\n\t//\t\t$scrollTarget2 = $(\"<div>Scroll target #2. Should stop 50 pixels before this point.</div>\"),\r\n\t//\t\tscrollOffset = -50;\r\n\t//\r\n\t//\t$scrollTarget1\r\n\t//\t\t.css({position: \"relative\", top: 3000, height: 100, paddingBottom: 10000})\r\n\t//\t\t.appendTo($(\"body\"));\r\n\t//\r\n\t//\t$scrollTarget2\r\n\t//\t\t.css({position: \"absolute\", top: 100, left: 3000, width: 100, paddingRight: 15000})\r\n\t//\t\t.appendTo($(\"body\"));\r\n\t//\r\n\t//\t$scrollTarget1\r\n\t//\t\t.velocity(\"scroll\", {\r\n\t//\t\t\tduration: 500, offset: scrollOffset, complete: function() {\r\n\t//\t\t\t\tassert.equal(Math.abs(Velocity.State.scrollAnchor[Velocity.State.scrollPropertyTop]\r\n\t//\t\t\t\t - ($scrollTarget1.offset().top + scrollOffset)) <= 100, true, \"Page scrolled top with a scroll offset.\");\r\n\t//\r\n\t//\t\t\t\tdone();\r\n\t//\t\t\t}\r\n\t//\t\t})\r\n\t//\t\t.velocity({opacity: 0.5}, function() {\r\n\t//\t\t\t$details\r\n\t//\t\t\t\t.velocity({opacity: 0.5}, 500)\r\n\t//\t\t\t\t.velocity(\"scroll\", 500)\r\n\t//\t\t\t\t.velocity({opacity: 1}, 500, function() {\r\n\t//\t\t\t\t\t//alert(Velocity.State.scrollAnchor[Velocity.State.scrollPropertyTop] + \" \" + ($details.offset().top + scrollOffset))\r\n\t//\t\t\t\t\tassert.equal(Math.abs(Velocity.State.scrollAnchor[Velocity.State.scrollPropertyTop]\r\n\t//\t\t\t\t\t - ($details.offset().top + scrollOffset)) <= 100, true, \"Page scroll top was chained.\");\r\n\t//\r\n\t//\t\t\t\t\tdone();\r\n\t//\r\n\t//\t\t\t\t\t//$scrollTarget1.remove();\r\n\t//\r\n\t//\t\t\t\t\t$scrollTarget2\r\n\t//\t\t\t\t\t\t.velocity(\"scroll\", {\r\n\t//\t\t\t\t\t\t\tduration: 500, axis: \"x\", offset: scrollOffset, complete: function() {\r\n\t//\t\t\t\t\t\t\t\t/* Phones can reposition the browser's scroll position by a 10 pixels or so, so we just check for a value that's within that range. */\r\n\t//\t\t\t\t\t\t\t\tassert.equal(Math.abs(Velocity.State.scrollAnchor[Velocity.State.scrollPropertyLeft]\r\n\t//\t\t\t\t\t\t\t\t - ($scrollTarget2.offset().left + scrollOffset)) <= 100, true, \"Page scrolled left with a scroll offset.\");\r\n\t//\r\n\t//\t\t\t\t\t\t\t\tdone();\r\n\t//\t\t\t\t\t\t\t}\r\n\t//\t\t\t\t\t\t})\r\n\t//\t\t\t\t\t\t.velocity({opacity: 0.5}, function() {\r\n\t//\t\t\t\t\t\t\t$details\r\n\t//\t\t\t\t\t\t\t\t.velocity({opacity: 0.5}, 500)\r\n\t//\t\t\t\t\t\t\t\t.velocity(\"scroll\", {duration: 500, axis: \"x\"})\r\n\t//\t\t\t\t\t\t\t\t.velocity({opacity: 1}, 500, function() {\r\n\t//\t\t\t\t\t\t\t\t\tassert.equal(Math.abs(Velocity.State.scrollAnchor[Velocity.State.scrollPropertyLeft]\r\n\t//\t\t\t\t\t\t\t\t\t - ($details.offset().left + scrollOffset)) <= 100, true, \"Page scroll left was chained.\");\r\n\t//\r\n\t//\t\t\t\t\t\t\t\t\tdone();\r\n\t//\t\t\t\t\t\t\t\t});\r\n\t//\t\t\t\t\t\t});\r\n\t//\t\t\t\t});\r\n\t//\t\t});\r\n});\r\n\r\n/* Element scrolling. */\r\nQUnit.skip(\"Scroll (Element)\", (assert) => {\r\n\t//\tvar done = assert.async(2),\r\n\t//\t\t$scrollTarget1 = $(\"\\\r\n\t//\t\t\t\t\t<div id='scroller'>\\\r\n\t//\t\t\t\t\t\taaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\r\n\t//\t\t\t\t\t\taaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\r\n\t//\t\t\t\t\t\taaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\r\n\t//\t\t\t\t\t\taaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\r\n\t//\t\t\t\t\t\taaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\\r\n\t//\t\t\t\t\t\t<div id='scrollerChild1'>\\\r\n\t//\t\t\t\t\t\t\tStop #1\\\r\n\t//\t\t\t\t\t\t\tbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\\\r\n\t//\t\t\t\t\t\t\tbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\\\r\n\t//\t\t\t\t\t\t\tbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\\\r\n\t//\t\t\t\t\t\t\tbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\\\r\n\t//\t\t\t\t\t\t\tbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\\\r\n\t//\t\t\t\t\t\t</div>\\\r\n\t//\t\t\t\t\t\tcccccccccccccccccccccccccccccccccccccccccccccccccccccccc\\\r\n\t//\t\t\t\t\t\tcccccccccccccccccccccccccccccccccccccccccccccccccccccccc\\\r\n\t//\t\t\t\t\t\tcccccccccccccccccccccccccccccccccccccccccccccccccccccccc\\\r\n\t//\t\t\t\t\t\tcccccccccccccccccccccccccccccccccccccccccccccccccccccccc\\\r\n\t//\t\t\t\t\t\tcccccccccccccccccccccccccccccccccccccccccccccccccccccccc\\\r\n\t//\t\t\t\t\t\t<div id='scrollerChild2'>\\\r\n\t//\t\t\t\t\t\t\tStop #2\\\r\n\t//\t\t\t\t\t\t\tdddddddddddddddddddddddddddddddddddddddddddddddddddddddd\\\r\n\t//\t\t\t\t\t\t\tdddddddddddddddddddddddddddddddddddddddddddddddddddddddd\\\r\n\t//\t\t\t\t\t\t\tdddddddddddddddddddddddddddddddddddddddddddddddddddddddd\\\r\n\t//\t\t\t\t\t\t\tdddddddddddddddddddddddddddddddddddddddddddddddddddddddd\\\r\n\t//\t\t\t\t\t\t\tdddddddddddddddddddddddddddddddddddddddddddddddddddddddd\\\r\n\t//\t\t\t\t\t\t</div>\\\r\n\t//\t\t\t\t\t\teeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\\\r\n\t//\t\t\t\t\t\teeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\\\r\n\t//\t\t\t\t\t\teeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\\\r\n\t//\t\t\t\t\t\teeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\\\r\n\t//\t\t\t\t\t\teeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\\\r\n\t//\t\t\t\t\t</div>\\\r\n\t//\t\t\t\t\");\r\n\t//\r\n\t//\tassert.expect(2);\r\n\t//\t$scrollTarget1\r\n\t//\t\t.css({position: \"absolute\", backgroundColor: \"white\", top: 100, left: \"50%\", width: 500, height: 100, overflowY: \"scroll\"})\r\n\t//\t\t.appendTo($(\"body\"));\r\n\t//\r\n\t//\t/* Test with a jQuery object container. */\r\n\t//\t$(\"#scrollerChild1\").velocity(\"scroll\", {\r\n\t//\t\tcontainer: $(\"#scroller\"), duration: 750, complete: function() {\r\n\t//\t\t\t/* Test with a raw DOM element container. */\r\n\t//\t\t\t$(\"#scrollerChild2\").velocity(\"scroll\", {\r\n\t//\t\t\t\tcontainer: $(\"#scroller\")[0], duration: 750, complete: function() {\r\n\t//\t\t\t\t\t/* This test is purely visual. */\r\n\t//\t\t\t\t\tassert.ok(true);\r\n\t//\r\n\t//\t\t\t\t\t$scrollTarget1.remove();\r\n\t//\r\n\t//\t\t\t\t\tvar $scrollTarget2 = $(\"\\\r\n\t//\t\t\t\t\t\t\t\t\t<div id='scroller'>\\\r\n\t//\t\t\t\t\t\t\t\t\t\t<div id='scrollerChild1' style='float: left; width: 20%;'>\\\r\n\t//\t\t\t\t\t\t\t\t\t\t\tStop #1\\\r\n\t//\t\t\t\t\t\t\t\t\t\t\tbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\\\r\n\t//\t\t\t\t\t\t\t\t\t\t\tbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\\\r\n\t//\t\t\t\t\t\t\t\t\t\t\tbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\\\r\n\t//\t\t\t\t\t\t\t\t\t\t\tbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\\\r\n\t//\t\t\t\t\t\t\t\t\t\t\tbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\\\r\n\t//\t\t\t\t\t\t\t\t\t\t\tcccccccccccccccccccccccccccccccccccccccccccccccccccccccc\\\r\n\t//\t\t\t\t\t\t\t\t\t\t\tcccccccccccccccccccccccccccccccccccccccccccccccccccccccc\\\r\n\t//\t\t\t\t\t\t\t\t\t\t\tcccccccccccccccccccccccccccccccccccccccccccccccccccccccc\\\r\n\t//\t\t\t\t\t\t\t\t\t\t\tcccccccccccccccccccccccccccccccccccccccccccccccccccccccc\\\r\n\t//\t\t\t\t\t\t\t\t\t\t\tcccccccccccccccccccccccccccccccccccccccccccccccccccccccc\\\r\n\t//\t\t\t\t\t\t\t\t\t\t</div>\\\r\n\t//\t\t\t\t\t\t\t\t\t\t<div id='scrollerChild2' style='float: right; width: 20%;'>\\\r\n\t//\t\t\t\t\t\t\t\t\t\t\tStop #2\\\r\n\t//\t\t\t\t\t\t\t\t\t\t\tdddddddddddddddddddddddddddddddddddddddddddddddddddddddd\\\r\n\t//\t\t\t\t\t\t\t\t\t\t\tdddddddddddddddddddddddddddddddddddddddddddddddddddddddd\\\r\n\t//\t\t\t\t\t\t\t\t\t\t\tdddddddddddddddddddddddddddddddddddddddddddddddddddddddd\\\r\n\t//\t\t\t\t\t\t\t\t\t\t\tdddddddddddddddddddddddddddddddddddddddddddddddddddddddd\\\r\n\t//\t\t\t\t\t\t\t\t\t\t\tdddddddddddddddddddddddddddddddddddddddddddddddddddddddd\\\r\n\t//\t\t\t\t\t\t\t\t\t\t\teeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\\\r\n\t//\t\t\t\t\t\t\t\t\t\t\teeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\\\r\n\t//\t\t\t\t\t\t\t\t\t\t\teeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\\\r\n\t//\t\t\t\t\t\t\t\t\t\t\teeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\\\r\n\t//\t\t\t\t\t\t\t\t\t\t\teeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\\\r\n\t//\t\t\t\t\t\t\t\t\t\t</div>\\\r\n\t//\t\t\t\t\t\t\t\t\t</div>\\\r\n\t//\t\t\t\t\t\t\t\t\");\r\n\t//\r\n\t//\t\t\t\t\t$scrollTarget2\r\n\t//\t\t\t\t\t\t.css({position: \"absolute\", backgroundColor: \"white\", top: 100, left: \"50%\", width: 100, height: 500, overflowX: \"scroll\"})\r\n\t//\t\t\t\t\t\t.appendTo($(\"body\"));\r\n\t//\r\n\t//\t\t\t\t\t/* Test with a jQuery object container. */\r\n\t//\t\t\t\t\t$(\"#scrollerChild2\").velocity(\"scroll\", {\r\n\t//\t\t\t\t\t\taxis: \"x\", container: $(\"#scroller\"), duration: 750, complete: function() {\r\n\t//\t\t\t\t\t\t\t/* Test with a raw DOM element container. */\r\n\t//\t\t\t\t\t\t\t$(\"#scrollerChild1\").velocity(\"scroll\", {\r\n\t//\t\t\t\t\t\t\t\taxis: \"x\", container: $(\"#scroller\")[0], duration: 750, complete: function() {\r\n\t//\t\t\t\t\t\t\t\t\t/* This test is purely visual. */\r\n\t//\t\t\t\t\t\t\t\t\tassert.ok(true);\r\n\t//\r\n\t//\t\t\t\t\t\t\t\t\t$scrollTarget2.remove();\r\n\t//\r\n\t//\t\t\t\t\t\t\t\t\tdone();\r\n\t//\t\t\t\t\t\t\t\t}\r\n\t//\t\t\t\t\t\t\t});\r\n\t//\t\t\t\t\t\t}\r\n\t//\t\t\t\t\t});\r\n\t//\r\n\t//\t\t\t\t\tdone();\r\n\t//\t\t\t\t}\r\n\t//\t\t\t});\r\n\t//\t\t}\r\n\t//\t});\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {asyncTests, defaultOptions, defaultProperties, getPropertyValue, getTarget, sleep} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.test(\"Stop\", async (assert) => {\r\n\tasyncTests(assert, 1, (done) => {\r\n\t\tVelocity(getTarget(), \"stop\");\r\n\t\tassert.ok(true, \"Calling on an element that isn't animating doesn't cause an error.\");\r\n\r\n\t\tdone();\r\n\t});\r\n\r\n\tasyncTests(assert, 1, (done) => {\r\n\t\tconst $target = getTarget();\r\n\r\n\t\tVelocity($target, defaultProperties, defaultOptions);\r\n\t\tVelocity($target, {top: 0}, defaultOptions);\r\n\t\tVelocity($target, {width: 0}, defaultOptions);\r\n\t\tVelocity($target, \"stop\");\r\n\t\tassert.ok(true, \"Calling on an element that is animating doesn't cause an error.\");\r\n\r\n\t\tdone();\r\n\t});\r\n\r\n\tasyncTests(assert, 1, async (done) => {\r\n\t\tconst $target = getTarget(),\r\n\t\t\tstartOpacity = getPropertyValue($target, \"opacity\");\r\n\r\n\t\tVelocity($target, {opacity: [0, 1]}, defaultOptions);\r\n\t\tawait sleep(defaultOptions.duration as number / 2);\r\n\t\tVelocity($target, \"stop\");\r\n\t\tassert.close(parseFloat(getPropertyValue($target, \"opacity\")), parseFloat(startOpacity) / 2, 0.1, \"Animation runs until stopped.\");\r\n\r\n\t\tdone();\r\n\t});\r\n\r\n\tasyncTests(assert, 1, async (done) => {\r\n\t\tconst $target = getTarget();\r\n\t\tlet begin = false;\r\n\r\n\t\tVelocity($target, {opacity: [0, 1]}, {\r\n\t\t\tdelay: 1000,\r\n\t\t\tbegin() {\r\n\t\t\t\tbegin = true;\r\n\t\t\t},\r\n\t\t});\r\n\t\tawait sleep(500);\r\n\t\tVelocity($target, \"stop\");\r\n\t\tassert.notOk(begin, \"Stop animation before delay ends.\");\r\n\r\n\t\tdone();\r\n\t});\r\n\r\n\tasyncTests(assert, 2, async (done) => {\r\n\t\tconst $target = getTarget();\r\n\t\tlet complete1 = false,\r\n\t\t\tcomplete2 = false;\r\n\r\n\t\tVelocity($target, {opacity: [0, 1]}, {\r\n\t\t\tqueue: \"test1\",\r\n\t\t\tcomplete() {\r\n\t\t\t\tcomplete1 = true;\r\n\t\t\t},\r\n\t\t});\r\n\t\tVelocity($target, {opacity: [0, 1]}, {\r\n\t\t\tqueue: \"test2\",\r\n\t\t\tcomplete() {\r\n\t\t\t\tcomplete2 = true;\r\n\t\t\t},\r\n\t\t});\r\n\t\tVelocity($target, \"stop\", \"test1\");\r\n\t\tawait sleep(defaultOptions.duration as number * 2);\r\n\t\tassert.ok(complete2, \"Stop animation with correct queue.\");\r\n\t\tassert.notOk(complete1, \"Don't stop animation with wrong queue.\");\r\n\r\n\t\tdone();\r\n\t});\r\n\r\n\tasyncTests(assert, 1, async (done) => {\r\n\t\tconst $target = getTarget();\r\n\t\tlet begin1 = false,\r\n\t\t\tbegin2 = false;\r\n\r\n\t\tVelocity($target, {opacity: [0, 1]}, {\r\n\t\t\tbegin() {\r\n\t\t\t\tbegin1 = true;\r\n\t\t\t},\r\n\t\t});\r\n\t\tVelocity($target, {width: \"500px\"}, {\r\n\t\t\tbegin() {\r\n\t\t\t\tbegin2 = true;\r\n\t\t\t},\r\n\t\t});\r\n\t\tVelocity($target, \"stop\", true);\r\n\t\tawait sleep(defaultOptions.duration as number * 2);\r\n\t\tassert.notOk(begin1 || begin2, \"Stop 'true' stops all animations.\");\r\n\r\n\t\tdone();\r\n\t});\r\n\r\n\tasyncTests(assert, 2, async (done) => {\r\n\t\tconst $target = getTarget(),\r\n\t\t\tanim = Velocity($target, {opacity: [0, 1]}, {\r\n\t\t\t\tqueue: \"test\",\r\n\t\t\t\tbegin() {\r\n\t\t\t\t\tbegin1 = true;\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\tlet begin1 = false,\r\n\t\t\tbegin2 = false;\r\n\r\n\t\tVelocity($target, {opacity: [0, 1]}, {\r\n\t\t\tbegin() {\r\n\t\t\t\tbegin2 = true;\r\n\t\t\t},\r\n\t\t});\r\n\t\tanim.velocity(\"stop\");\r\n\t\tawait sleep(defaultOptions.duration as number * 2);\r\n\t\tassert.notOk(begin1, \"Stop without arguments on a chain stops chain animations.\");\r\n\t\tassert.ok(begin2, \"Stop without arguments on a chain doesn't stop other animations.\");\r\n\r\n\t\tdone();\r\n\t});\r\n\r\n\tassert.expect(asyncTests());\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.test(\"Tween\", (assert) => {\r\n\tconst $target1 = getTarget(),\r\n\t\tstartOpacity = $target1.style.opacity;\r\n\r\n\tassert.expect(11);\r\n\r\n\tassert.raises(() => (Velocity as any)(\"tween\", \"invalid\"), \"Invalid percentComplete throws an error.\");\r\n\tassert.raises(() => (Velocity as any)([$target1, $target1], \"tween\", \"invalid\"), \"Passing more than one target throws an error.\");\r\n\tassert.raises(() => (Velocity as any)(\"tween\", 0, [\"invalid\"]), \"Invalid propertyMap throws an error.\");\r\n\tassert.raises(() => (Velocity as any)(\"tween\", 0, \"invalid\", 1), \"Property without an element must be forcefed or throw an error.\");\r\n\r\n\tassert.equal($target1.velocity(\"tween\", 0.5, \"opacity\", [1, 0], \"linear\"), \"0.5\", \"Calling on an chain returns the correct value.\");\r\n\tassert.equal(Velocity($target1, \"tween\", 0.5, \"opacity\", [1, 0], \"linear\"), \"0.5\", \"Calling with an element returns the correct value.\");\r\n\tassert.equal(Velocity(\"tween\", 0.5, \"opacity\", [1, 0], \"linear\"), \"0.5\", \"Calling without an element returns the correct value.\");\r\n\tassert.equal($target1.style.opacity, startOpacity, \"Ensure that the element is not altered.\");\r\n\r\n\tassert.equal(typeof Velocity($target1, \"tween\", 0.5, \"opacity\", [1, 0], \"linear\"), \"string\", \"Calling a single property returns a value.\");\r\n\tassert.equal(typeof Velocity($target1, \"tween\", 0.5, {opacity: [1, 0]}, \"linear\"), \"object\", \"Calling a propertiesMap returns an object.\");\r\n\tassert.deepEqual($target1.velocity(\"tween\", 0.5, {opacity: [1, 0]}, \"linear\"), Velocity($target1, \"tween\", 0.5, {opacity: [1, 0]}, \"linear\"),\r\n\t\t\"Calling directly returns the same as a chain.\");\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nQUnit.module(\"Feature\");\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {defaultProperties, getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.test(\"'velocity-animating' Classname\", (assert) => {\r\n\tconst done = assert.async(1);\r\n\r\n\tVelocity(getTarget(), defaultProperties, {\r\n\t\tbegin(elements) {\r\n\t\t\tassert.equal(/velocity-animating/.test(elements[0].className), true, \"Class added.\");\r\n\t\t},\r\n\t\tcomplete(elements) {\r\n\t\t\tassert.equal(/velocity-animating/.test(elements[0].className), false, \"Class removed.\");\r\n\t\t},\r\n\t})\r\n\t\t.then(done);\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.skip(\"Colors (Shorthands)\", (assert) => {\r\n\tconst $target = getTarget();\r\n\r\n\tVelocity($target, {borderColor: \"#7871c2\", color: [\"#297dad\", \"spring\", \"#5ead29\"]});\r\n\r\n\t//\tassert.equal(Data($target).style.borderColorRed.endValue, 120, \"Hex #1a component.\");\r\n\t//\tassert.equal(Data($target).style.borderColorGreen.endValue, 113, \"Hex #1b component.\");\r\n\t//\tassert.equal(Data($target).style.borderColorBlue.endValue, 194, \"Hex #1c component.\");\r\n\t//\tassert.equal(Data($target).style.colorRed.easing, \"spring\", \"Per-property easing.\");\r\n\t//\tassert.equal(Data($target).style.colorRed.startValue, 94, \"Forcefed hex #2a component.\");\r\n\t//\tassert.equal(Data($target).style.colorGreen.startValue, 173, \"Forcefed hex #2b component.\");\r\n\t//\tassert.equal(Data($target).style.colorBlue.startValue, 41, \"Forcefed hex #2c component.\");\r\n\t//\tassert.equal(Data($target).style.colorRed.endValue, 41, \"Hex #3a component.\");\r\n\t//\tassert.equal(Data($target).style.colorGreen.endValue, 125, \"Hex #3b component.\");\r\n\t//\tassert.equal(Data($target).style.colorBlue.endValue, 173, \"Hex #3c component.\");\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {Data, defaultProperties, defaultStyles, getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.todo(\"Forcefeeding\", (assert) => {\r\n\t/* Note: Start values are always converted into pixels. W test the conversion ratio we already know to avoid additional work. */\r\n\tconst testStartWidth = \"1rem\",\r\n\t\ttestStartWidthToPx = \"16px\",\r\n\t\ttestStartHeight = \"10px\",\r\n\t\t$target = getTarget();\r\n\r\n\tVelocity($target, {\r\n\t\twidth: [100, \"linear\", testStartWidth],\r\n\t\theight: [100, testStartHeight],\r\n\t\topacity: [defaultProperties.opacity as any, \"easeInQuad\"],\r\n\t});\r\n\r\n\tassert.equal(Data($target).cache.width, parseFloat(testStartWidthToPx), \"Forcefed value #1 passed to tween.\");\r\n\tassert.equal(Data($target).cache.height, parseFloat(testStartHeight), \"Forcefed value #2 passed to tween.\");\r\n\tassert.equal(Data($target).cache.opacity, defaultStyles.opacity, \"Easing was misinterpreted as forcefed value.\");\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity, {VelocityResult} from \"velocity-animate\";\r\nimport {defaultOptions, defaultProperties, getNow, getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.test(\"Promises\", (assert) => {\r\n\tconst done = assert.async(9),\r\n\t\tstart = getNow();\r\n\tlet result: VelocityResult;\r\n\r\n\tassert.expect(9);\r\n\r\n\t/**********************\r\n\t Invalid Arguments\r\n\t **********************/\r\n\r\n\t((Velocity as any)() as Promise<any>)\r\n\t\t.then(() => {\r\n\t\t\tassert.notOk(true, \"Calling with no arguments should reject a Promise.\");\r\n\t\t}, () => {\r\n\t\t\tassert.ok(true, \"Calling with no arguments should reject a Promise.\");\r\n\t\t})\r\n\t\t.then(done);\r\n\r\n\tVelocity(getTarget() as any)\r\n\t\t.then(() => {\r\n\t\t\tassert.notOk(true, \"Calling with no properties should reject a Promise.\");\r\n\t\t}, () => {\r\n\t\t\tassert.ok(true, \"Calling with no properties should reject a Promise.\");\r\n\t\t})\r\n\t\t.then(done);\r\n\r\n\tVelocity(getTarget(), {})\r\n\t\t.then(() => {\r\n\t\t\tassert.ok(true, \"Calling with empty properties should not reject a Promise.\");\r\n\t\t}, () => {\r\n\t\t\tassert.notOk(true, \"Calling with empty properties should not reject a Promise.\");\r\n\t\t})\r\n\t\t.then(done);\r\n\r\n\tVelocity(getTarget(), {}, defaultOptions.duration)\r\n\t\t.then(() => {\r\n\t\t\tassert.ok(true, \"Calling with empty properties + duration should not reject a Promise.\");\r\n\t\t}, () => {\r\n\t\t\tassert.notOk(true, \"Calling with empty properties + duration should not reject a Promise.\");\r\n\t\t})\r\n\t\t.then(done);\r\n\r\n\t/* Invalid arguments: Ensure an error isn't thrown. */\r\n\tVelocity(getTarget(), {} as any, \"fakeArg1\", \"fakeArg2\")\r\n\t\t.then(() => {\r\n\t\t\tassert.ok(true, \"Calling with invalid arguments should reject a Promise.\");\r\n\t\t}, () => {\r\n\t\t\tassert.notOk(true, \"Calling with invalid arguments should reject a Promise.\");\r\n\t\t})\r\n\t\t.then(done);\r\n\r\n\tresult = Velocity(getTarget(), defaultProperties, defaultOptions);\r\n\tresult\r\n\t\t.then((elements) => {\r\n\t\t\tassert.equal(elements.length, 1, \"Calling with a single element fulfills with a single element array.\");\r\n\t\t}, () => {\r\n\t\t\tassert.ok(false, \"Calling with a single element fulfills with a single element array.\");\r\n\t\t})\r\n\t\t.then(done);\r\n\tresult.velocity(defaultProperties)\r\n\t\t.then((elements) => {\r\n\t\t\tassert.ok(getNow() - start > 2 * (defaultOptions.duration as number), \"Queued call fulfilled after correct delay.\");\r\n\t\t}, () => {\r\n\t\t\tassert.ok(false, \"Queued call fulfilled after correct delay.\");\r\n\t\t})\r\n\t\t.then(done);\r\n\r\n\tresult = Velocity([getTarget(), getTarget()], defaultProperties, defaultOptions);\r\n\tresult\r\n\t\t.then((elements) => {\r\n\t\t\tassert.equal(elements.length, 2, \"Calling with multiple elements fulfills with a multiple element array.\");\r\n\t\t}, () => {\r\n\t\t\tassert.ok(false, \"Calling with multiple elements fulfills with a multiple element array.\");\r\n\t\t})\r\n\t\t.then(done);\r\n\r\n\tconst anim = Velocity(getTarget(), defaultProperties, defaultOptions);\r\n\r\n\tanim\r\n\t\t.then(() => {\r\n\t\t\tassert.ok(getNow() - start < (defaultOptions.duration as number), \"Stop call fulfilled after correct delay.\");\r\n\t\t}, () => {\r\n\t\t\tassert.ok(false, \"Stop call fulfilled after correct delay.\");\r\n\t\t})\r\n\t\t.then(done);\r\n\tanim.velocity(\"stop\");\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {asyncCheckDuration, asyncTests, defaultProperties, getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.todo(\"Sequences\", (assert) => {\r\n\t//\tvar done = assert.async(2),\r\n\t//\t\t$target1 = getTarget(),\r\n\t//\t\t$target2 = getTarget(),\r\n\t//\t\tredirectOptions = {duration: 1500};\r\n\t//\r\n\t//\t((window as any).jQuery || (window as any).Zepto || window).Velocity.Redirects.test = function(element, options, elementIndex, elementsLength) {\r\n\t//\t\tif (elementIndex === 0) {\r\n\t//\t\t\tassert.deepEqual(element, $target1, \"Element passed through #1.\");\r\n\t//\t\t\tassert.deepEqual(options, redirectOptions, \"Options object passed through #1.\");\r\n\t//\t\t\tassert.equal(elementIndex, 0, \"Element index passed through #1.\");\r\n\t//\t\t\tassert.equal(elementsLength, 2, \"Elements length passed through #1.\");\r\n\t//\r\n\t//\t\t\tdone();\r\n\t//\t\t} else if (elementIndex === 1) {\r\n\t//\t\t\tassert.deepEqual(element, $target2, \"Element passed through #2.\");\r\n\t//\t\t\tassert.deepEqual(options, redirectOptions, \"Options object passed through #2.\");\r\n\t//\t\t\tassert.equal(elementIndex, 1, \"Element index passed through #2.\");\r\n\t//\t\t\tassert.equal(elementsLength, 2, \"Elements length passed through #2.\");\r\n\t//\r\n\t//\t\t\tdone();\r\n\t//\t\t}\r\n\t//\t};\r\n\t//\r\n\t//\tVelocity([$target1, $target2], \"test\", redirectOptions);\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {Data, getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.todo(\"Value Functions\", (assert) => {\r\n\tconst testWidth = 10,\r\n\t\t$target1 = getTarget(),\r\n\t\t$target2 = getTarget();\r\n\r\n\tVelocity([$target1, $target2], {\r\n\t\twidth(i, total) {\r\n\t\t\treturn (i + 1) / total * testWidth;\r\n\t\t},\r\n\t});\r\n\r\n\tassert.equal(Data($target1).cache.width, parseFloat(testWidth as any) / 2, \"Function value #1 passed to tween.\");\r\n\tassert.equal(Data($target2).cache.width, parseFloat(testWidth as any), \"Function value #2 passed to tween.\");\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nQUnit.module(\"UI Pack\");\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {getPropertyValue, getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.skip(\"Packaged Effect: slideUp/Down\", (assert) => {\r\n\tconst done = assert.async(4),\r\n\t\t$target1 = getTarget(),\r\n\t\t$target2 = getTarget(),\r\n\t\tinitialStyles = {\r\n\t\t\tdisplay: \"none\",\r\n\t\t\tpaddingTop: \"123px\",\r\n\t\t};\r\n\r\n\t$target1.style.display = initialStyles.display;\r\n\t$target1.style.paddingTop = initialStyles.paddingTop;\r\n\r\n\tVelocity($target1, \"slideDown\", {\r\n\t\tbegin(elements) {\r\n\t\t\tassert.deepEqual(elements, [$target1], \"slideDown: Begin callback returned.\");\r\n\r\n\t\t\tdone();\r\n\t\t},\r\n\t\tcomplete(elements) {\r\n\t\t\tassert.deepEqual(elements, [$target1], \"slideDown: Complete callback returned.\");\r\n\t\t\t//\t\t\tassert.equal(getPropertyValue($target1, \"display\"), Values.getDisplayType($target1), \"slideDown: display set to default.\");\r\n\t\t\tassert.notEqual(getPropertyValue($target1, \"height\"), 0, \"slideDown: height set.\");\r\n\t\t\tassert.equal(getPropertyValue($target1, \"paddingTop\"), initialStyles.paddingTop, \"slideDown: paddingTop set.\");\r\n\r\n\t\t\tdone();\r\n\t\t},\r\n\t\t//\t}).then(function(elements) {\r\n\t\t//\t\tassert.deepEqual(elements, [$target1], \"slideDown: Promise fulfilled.\");\r\n\t\t//\r\n\t\t//\t\tdone();\r\n\t});\r\n\r\n\tVelocity($target2, \"slideUp\", {\r\n\t\tbegin(elements) {\r\n\t\t\tassert.deepEqual(elements, [$target2], \"slideUp: Begin callback returned.\");\r\n\r\n\t\t\tdone();\r\n\t\t},\r\n\t\tcomplete(elements) {\r\n\t\t\tassert.deepEqual(elements, [$target2], \"slideUp: Complete callback returned.\");\r\n\t\t\tassert.equal(getPropertyValue($target2, \"display\"), 0, \"slideUp: display set to none.\");\r\n\t\t\tassert.notEqual(getPropertyValue($target2, \"height\"), 0, \"slideUp: height reset.\");\r\n\t\t\tassert.equal(getPropertyValue($target1, \"paddingTop\"), initialStyles.paddingTop, \"slideUp: paddingTop reset.\");\r\n\r\n\t\t\tdone();\r\n\t\t},\r\n\t\t//\t}).then(function(elements) {\r\n\t\t//\t\tassert.deepEqual(elements, [$target2], \"slideUp: Promise fulfilled.\");\r\n\t\t//\r\n\t\t//\t\tdone();\r\n\t});\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {completeCheckDuration, defaultOptions, getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.skip(\"Call Options\", (assert) => {\r\n\tconst done = assert.async(2),\r\n\t\tUICallOptions1 = {\r\n\t\t\tdelay: 123,\r\n\t\t\tduration: defaultOptions.duration,\r\n\t\t\teasing: \"spring\", // Should get ignored\r\n\t\t},\r\n\t\t$target1 = getTarget();\r\n\r\n\t//assert.expect(1);\r\n\tVelocity($target1, \"transition.slideLeftIn\", UICallOptions1);\r\n\r\n\tsetTimeout(() => {\r\n\t\t// Note: We can do this because transition.slideLeftIn is composed of a single call.\r\n\t\t//\t\tassert.equal(Data($target1).opts.delay, UICallOptions1.delay, \"Whitelisted option passed in.\");\r\n\t\t//\t\tassert.notEqual(Data($target1).opts.easing, UICallOptions1.easing, \"Non-whitelisted option not passed in #1a.\");\r\n\t\t//\t\tassert.equal(!/velocity-animating/.test(Data($target1).className), true, \"Duration option passed in.\");\r\n\r\n\t\tdone();\r\n\t}, completeCheckDuration);\r\n\r\n\tconst UICallOptions2 = {\r\n\t\tstagger: 100,\r\n\t\tduration: defaultOptions.duration,\r\n\t\tbackwards: true,\r\n\t};\r\n\r\n\tconst $targets = [getTarget(), getTarget(), getTarget()];\r\n\tVelocity($targets, \"transition.slideLeftIn\", UICallOptions2);\r\n\r\n\tsetTimeout(() => {\r\n\t\t//\t\tassert.equal(Data($targets[0]).opts.delay, UICallOptions2.stagger * 2, \"Backwards stagger delay passed in #1a.\");\r\n\t\t//\t\tassert.equal(Data($targets[1]).opts.delay, UICallOptions2.stagger * 1, \"Backwards stagger delay passed in #1b.\");\r\n\t\t//\t\tassert.equal(Data($targets[2]).opts.delay, UICallOptions2.stagger * 0, \"Backwards stagger delay passed in #1c.\");\r\n\r\n\t\tdone();\r\n\t}, completeCheckDuration);\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.skip(\"Callbacks\", (assert) => {\r\n\tconst done = assert.async(2),\r\n\t\t$targets = [getTarget(), getTarget()];\r\n\r\n\tassert.expect(3);\r\n\tVelocity($targets, \"transition.bounceIn\", {\r\n\t\tbegin(elements) {\r\n\t\t\tassert.deepEqual(elements, $targets, \"Begin callback returned.\");\r\n\r\n\t\t\tdone();\r\n\t\t},\r\n\t\tcomplete(elements) {\r\n\t\t\tassert.deepEqual(elements, $targets, \"Complete callback returned.\");\r\n\r\n\t\t\tdone();\r\n\t\t},\r\n\t\t//\t}).then(function(elements) {\r\n\t\t//\t\tassert.deepEqual(elements, $targets, \"Promise fulfilled.\");\r\n\t\t//\r\n\t\t//\t\tdone();\r\n\t});\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {asyncCheckDuration, completeCheckDuration, defaultOptions, getPropertyValue, getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.skip(\"In/Out\", (assert) => {\r\n\tconst done = assert.async(2),\r\n\t\t$target1 = getTarget(),\r\n\t\t$target2 = getTarget(),\r\n\t\t$target3 = getTarget(),\r\n\t\t$target4 = getTarget(),\r\n\t\t$target5 = getTarget(),\r\n\t\t$target6 = getTarget();\r\n\r\n\tVelocity($target1, \"transition.bounceIn\", defaultOptions.duration);\r\n\r\n\tVelocity($target2, \"transition.bounceIn\", {duration: defaultOptions.duration, display: \"inline\"});\r\n\r\n\tVelocity($target3, \"transition.bounceOut\", defaultOptions.duration);\r\n\r\n\tVelocity($target4, \"transition.bounceOut\", {duration: defaultOptions.duration, display: null});\r\n\r\n\t$target5.style.visibility = \"hidden\";\r\n\tVelocity($target5, \"transition.bounceIn\", {duration: defaultOptions.duration, visibility: \"visible\"});\r\n\r\n\t$target6.style.visibility = \"visible\";\r\n\tVelocity($target6, \"transition.bounceOut\", {duration: defaultOptions.duration, visibility: \"hidden\"});\r\n\r\n\tassert.expect(8);\r\n\tsetTimeout(() => {\r\n\t\tassert.notEqual(getPropertyValue($target3, \"display\"), 0, \"Out: display not prematurely set to none.\");\r\n\t\tassert.notEqual(getPropertyValue($target6, \"visibility\"), \"hidden\", \"Out: visibility not prematurely set to hidden.\");\r\n\r\n\t\tdone();\r\n\t}, asyncCheckDuration);\r\n\r\n\tsetTimeout(() => {\r\n\t\t//\t\tassert.equal(getPropertyValue($target1, \"display\"), Values.getDisplayType($target1), \"In: display set to default.\");\r\n\t\tassert.equal(getPropertyValue($target2, \"display\"), \"inline\", \"In: Custom inline value set.\");\r\n\r\n\t\tassert.equal(getPropertyValue($target3, \"display\"), 0, \"Out: display set to none.\");\r\n\t\t//\t\tassert.equal(getPropertyValue($target4, \"display\"), Values.getDisplayType($target3), \"Out: No display value set.\");\r\n\r\n\t\tassert.equal(getPropertyValue($target5, \"visibility\"), \"visible\", \"In: visibility set to visible.\");\r\n\t\tassert.equal(getPropertyValue($target6, \"visibility\"), \"hidden\", \"Out: visibility set to hidden.\");\r\n\r\n\t\tdone();\r\n\t}, completeCheckDuration);\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {getPropertyValue, getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.skip(\"RegisterEffect\", (assert) => {\r\n//\tconst done = assert.async(1),\r\n//\t\teffectDefaultDuration = 800;\r\n//\r\n//\tassert.expect(2);\r\n//\tVelocity.RegisterEffect(\"callout.twirl\", {\r\n//\t\tdefaultDuration: effectDefaultDuration,\r\n//\t\tcalls: [\r\n//\t\t\t[{rotateZ: 1080}, 0.5],\r\n//\t\t\t[{scaleX: 0.5}, 0.25, {easing: \"spring\"}],\r\n//\t\t\t[{scaleX: 1}, 0.25, {easing: \"spring\"}],\r\n//\t\t],\r\n//\t});\r\n//\r\n//\tconst $target1 = getTarget();\r\n//\tVelocity($target1, \"callout.twirl\");\r\n//\r\n//\tsetTimeout(() => {\r\n//\t\tassert.equal(parseFloat(getPropertyValue($target1, \"rotateZ\") as string), 1080, \"First call's property animated.\");\r\n//\t\tassert.equal(parseFloat(getPropertyValue($target1, \"scaleX\") as string), 1, \"Last call's property animated.\");\r\n//\r\n//\t\tdone();\r\n//\t}, effectDefaultDuration * 1.5);\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity from \"velocity-animate\";\r\nimport {defaultProperties, getPropertyValue, getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.skip(\"RunSequence\", (assert) => {\r\n\t//\r\n\t//\tvar done = assert.async(1),\r\n\t//\t\t$target1 = getTarget(),\r\n\t//\t\t$target2 = getTarget(),\r\n\t//\t\t$target3 = getTarget(),\r\n\t//\t\tmySequence = [\r\n\t//\t\t\t{elements: $target1, properties: {opacity: defaultProperties.opacity}},\r\n\t//\t\t\t{elements: $target2, properties: {height: defaultProperties.height}},\r\n\t//\t\t\t{\r\n\t//\t\t\t\telements: $target3, properties: {width: defaultProperties.width}, options: {\r\n\t//\t\t\t\t\tdelay: 100,\r\n\t//\t\t\t\t\tsequenceQueue: false,\r\n\t//\t\t\t\t\tcomplete: function() {\r\n\t//\t\t\t\t\t\tassert.equal(parseFloat(getPropertyValue($target1, \"opacity\") as string), defaultProperties.opacity, \"First call's property animated.\");\r\n\t//\t\t\t\t\t\tassert.equal(parseFloat(getPropertyValue($target2, \"height\") as string), defaultProperties.height, \"Second call's property animated.\");\r\n\t//\t\t\t\t\t\tassert.equal(parseFloat(getPropertyValue($target3, \"width\") as string), defaultProperties.width, \"Last call's property animated.\");\r\n\t//\r\n\t//\t\t\t\t\t\tdone();\r\n\t//\t\t\t\t\t}\r\n\t//\t\t\t\t}\r\n\t//\t\t\t}\r\n\t//\t\t];\r\n\t//\r\n\t//\tassert.expect(3);\r\n\t//\tVelocity.RunSequence(mySequence);\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nQUnit.module(\"Properties\");\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity, {HTMLorSVGElement} from \"velocity-animate\";\r\nimport {getTarget} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.skip(\"GenericReordering\", (assert) => {\r\n\t//\tfunction genericReordering(element: HTMLorSVGElement, propertyValue?: string): string | void {\r\n\t//\t\tif (propertyValue === undefined) {\r\n\t//\t\t\tpropertyValue = Velocity(element, \"style\", \"textShadow\");\r\n\t//\t\t\tconst split = propertyValue.split(/\\s/g),\r\n\t//\t\t\t\tfirstPart = split[0];\r\n\t//\t\t\tlet newValue = \"\";\r\n\t//\r\n\t//\t\t\tif (Velocity.CSS.ColorNames[firstPart]) {\r\n\t//\t\t\t\tsplit.shift();\r\n\t//\t\t\t\tsplit.push(firstPart);\r\n\t//\t\t\t\tnewValue = split.join(\" \");\r\n\t//\t\t\t} else if (firstPart.match(/^#|^hsl|^rgb|-gradient/)) {\r\n\t//\t\t\t\tconst matchedString = propertyValue.match(/(hsl.*\\)|#[\\da-fA-F]+|rgb.*\\)|.*gradient.*\\))\\s/g)[0];\r\n\t//\r\n\t//\t\t\t\tnewValue = propertyValue.replace(matchedString, \"\") + \" \" + matchedString.trim();\r\n\t//\t\t\t} else {\r\n\t//\t\t\t\tnewValue = propertyValue;\r\n\t//\t\t\t}\r\n\t//\t\t\treturn newValue;\r\n\t//\t\t}\r\n\t//\t}\r\n\t//\r\n\t//\tVelocity(\"registerNormalization\", \"Element\", \"genericReordering\", genericReordering);\r\n\t//\r\n\t//\tlet tests = [\r\n\t//\t\t{\r\n\t//\t\t\ttest: \"hsl(16, 100%, 66%) 1px 1px 1px\",\r\n\t//\t\t\tresult: \"1px 1px 1px hsl(16, 100%, 66%)\",\r\n\t//\t\t}, {\r\n\t//\t\t\ttest: \"-webkit-linear-gradient(red, yellow) 1px 1px 1px\",\r\n\t//\t\t\tresult: \"1px 1px 1px -webkit-linear-gradient(rgba(255,0,0,1), rgba(255,255,0,1))\",\r\n\t//\t\t}, {\r\n\t//\t\t\ttest: \"-o-linear-gradient(red, yellow) 1px 1px 1px\",\r\n\t//\t\t\tresult: \"1px 1px 1px -o-linear-gradient(rgba(255,0,0,1), rgba(255,255,0,1))\",\r\n\t//\t\t}, {\r\n\t//\t\t\ttest: \"-moz-linear-gradient(red, yellow) 1px 1px 1px\",\r\n\t//\t\t\tresult: \"1px 1px 1px -moz-linear-gradient(rgba(255,0,0,1), rgba(255,255,0,1))\",\r\n\t//\t\t}, {\r\n\t//\t\t\ttest: \"linear-gradient(red, yellow) 1px 1px 1px\",\r\n\t//\t\t\tresult: \"1px 1px 1px linear-gradient(rgba(255,0,0,1), rgba(255,255,0,1))\",\r\n\t//\t\t}, {\r\n\t//\t\t\ttest: \"red 1px 1px 1px\",\r\n\t//\t\t\tresult: \"1px 1px 1px rgba(255,0,0,1)\",\r\n\t//\t\t}, {\r\n\t//\t\t\ttest: \"#000000 1px 1px 1px\",\r\n\t//\t\t\tresult: \"1px 1px 1px rgba(0,0,0,1)\",\r\n\t//\t\t}, {\r\n\t//\t\t\ttest: \"rgb(0, 0, 0) 1px 1px 1px\",\r\n\t//\t\t\tresult: \"1px 1px 1px rgba(0,0,0,1)\",\r\n\t//\t\t}, {\r\n\t//\t\t\ttest: \"rgba(0, 0, 0, 1) 1px 1px 1px\",\r\n\t//\t\t\tresult: \"1px 1px 1px rgba(0,0,0,1)\",\r\n\t//\t\t}, {\r\n\t//\t\t\ttest: \"1px 1px 1px rgb(0, 0, 0)\",\r\n\t//\t\t\tresult: \"1px 1px 1px rgba(0,0,0,1)\",\r\n\t//\t\t},\r\n\t//\t];\r\n\t//\r\n\t//\tfor (let test of tests) {\r\n\t//\t\tlet element = getTarget();\r\n\t//\r\n\t//\t\telement.velocity(\"style\", \"textShadow\", test.test);\r\n\t//\t\tassert.equal(element.velocity(\"style\", \"genericReordering\"), test.result, test.test);\r\n\t//\t}\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity, {VelocityResult} from \"velocity-animate\";\r\nimport {getTarget, once} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.test(\"Display\", (assert) => {\r\n\tconst done = assert.async(5);\r\n\r\n\tVelocity(getTarget(), \"style\", \"display\", \"none\")\r\n\t\t.velocity({display: \"block\"}, {\r\n\t\t\tprogress: once((elements: VelocityResult) => {\r\n\t\t\t\tassert.equal(elements.velocity(\"style\", \"display\"), \"block\", \"Display:'block' was set immediately.\");\r\n\r\n\t\t\t\tdone();\r\n\t\t\t}),\r\n\t\t});\r\n\r\n\tVelocity(getTarget(), \"style\", \"display\", \"none\")\r\n\t\t.velocity(\"style\", \"display\", \"auto\")\r\n\t\t.then((elements) => {\r\n\t\t\tassert.equal(elements[0].style.display, \"block\", \"Display:'auto' was understood.\");\r\n\t\t\tassert.equal(elements.velocity(\"style\", \"display\"), \"block\", \"Display:'auto' was cached as 'block'.\");\r\n\r\n\t\t\tdone();\r\n\t\t});\r\n\r\n\tVelocity(getTarget(), \"style\", \"display\", \"none\")\r\n\t\t.velocity(\"style\", \"display\", \"\")\r\n\t\t.then((elements) => {\r\n\t\t\tassert.equal(elements.velocity(\"style\", \"display\"), \"block\", \"Display:'' was reset correctly.\");\r\n\r\n\t\t\tdone();\r\n\t\t});\r\n\r\n\tVelocity(getTarget(), {display: \"none\"}, {\r\n\t\tprogress: once((elements: VelocityResult) => {\r\n\t\t\tassert.notEqual(elements.velocity(\"style\", \"display\"), \"none\", \"Display:'none' was not set immediately.\");\r\n\r\n\t\t\tdone();\r\n\t\t}),\r\n\t})\r\n\t\t.then((elements) => {\r\n\t\t\tassert.equal(elements.velocity(\"style\", \"display\"), \"none\", \"Display:'none' was set upon completion.\");\r\n\r\n\t\t\tdone();\r\n\t\t});\r\n});\r\n","/*\r\n * velocity-animate (C) 2014-2018 Julian Shapiro.\r\n *\r\n * Licensed under the MIT license. See LICENSE file in the project root for details.\r\n */\r\n\r\nimport \"qunit\";\r\n\r\nimport Velocity, {VelocityResult} from \"velocity-animate\";\r\nimport {getTarget, once} from \"../utilities\";\r\nimport \"./_module\";\r\n\r\nQUnit.test(\"Visibility\", (assert) => {\r\n\tconst done = assert.async(4);\r\n\r\n\tVelocity(getTarget(), \"style\", \"visibility\", \"hidden\")\r\n\t\t.velocity({visibility: \"visible\"}, {\r\n\t\t\tprogress: once((elements: VelocityResult) => {\r\n\t\t\t\tassert.equal(elements.velocity(\"style\", \"visibility\"), \"visible\", \"Visibility:'visible' was set immediately.\");\r\n\r\n\t\t\t\tdone();\r\n\t\t\t}),\r\n\t\t});\r\n\r\n\tVelocity(getTarget(), \"style\", \"visibility\", \"hidden\")\r\n\t\t.velocity(\"style\", \"visibility\", \"\")\r\n\t\t.then((elements) => {\r\n\t\t\t// NOTE: The test elements inherit \"hidden\", so while illogical it\r\n\t\t\t// is in fact correct.\r\n\t\t\tassert.equal(elements.velocity(\"style\", \"visibility\"), \"hidden\", \"Visibility:'' was reset correctly.\");\r\n\r\n\t\t\tdone();\r\n\t\t});\r\n\r\n\tVelocity(getTarget(), {visibility: \"hidden\"}, {\r\n\t\tprogress: once((elements: VelocityResult) => {\r\n\t\t\tassert.notEqual(elements.velocity(\"style\", \"visibility\"), \"visible\", \"Visibility:'hidden' was not set immediately.\");\r\n\r\n\t\t\tdone();\r\n\t\t}),\r\n\t})\r\n\t\t.then((elements) => {\r\n\t\t\tassert.equal(elements.velocity(\"style\", \"visibility\"), \"hidden\", \"Visibility:'hidden' was set upon completion.\");\r\n\r\n\t\t\tdone();\r\n\t\t});\r\n});\r\n"],"names":["isMobile","test","navigator","userAgent","isAndroid","defaultStyles","opacity","width","height","marginBottom","colorGreen","textShadowBlur","defaultProperties","String","defaultOptions","queue","duration","easing","begin","complete","progress","loop","delay","mobileHA","$","window","jQuery","Zepto","$qunitStage","document","getElementById","asyncCheckDuration","completeCheckDuration","IE","documentMode","i","div","createElement","innerHTML","getElementsByTagName","length","undefined","targets","asyncCount","QUnit","config","reorder","element","startValues","each","property","startValue","style","jquery","velocityData","performance","now","Date","Velocity","className","color","textShadow","appendChild","push","applyStartValues","func","done","result","apply","arguments","ms","Promise","resolve","setTimeout","assert","count","callback","oldCount","async","testDone","querySelectorAll","velocity","removeChild","pop","asyncTests","defaults","reset","details","console","log","total","failed","passed","runtime","module","testComplete","testDuration","testEasing","testOptions","expect","getTarget","ok","animations","equal","options","elements","properties","newProperties","then","Data","cache","todo","testStartValues","paddingLeft","paddingRight","marginLeft","marginTop","lineHeight","wordSpacing","backgroundColor","$target1","$target2","parseFloat","testPropertiesEndNoConvert","$target3","testPropertiesEndConvert","parentWidth","clientWidth","parentHeight","clientHeight","parentFontSize","remSize","body","$target4","parseInt","Math","floor","parentElement","offsetWidth","testPropertiesTRBL","left","$TRBLContainer","setAttribute","$target5","position","round","$target","sleep","getPropertyValue","$targetSet","deepEqual","testDelay","start","getNow","activeCall","close","success","e","easingBezierArray","easingBezierTestPercent","easingBezierTestValue","animation","easingSpringRK4Array","easingSpringRK4TestPercent","easingSpringRK4TestValue","easingStepArray","easingStepTestPercent","easingStepTestValue","once","frameRates","testFrame","frameRate","counter","fpsLimit","lastPercentComplete","percentComplete","msRemaining","testQueue","ignore","data","anim1","anim2","queueList","anim3","repeat","startDelay","speed","__start","actual","expected","__count","sync","notOk","top","complete1","complete2","skip","startOpacity","begin1","begin2","anim","raises","borderColor","testStartWidth","testStartWidthToPx","testStartHeight","testWidth","initialStyles","display","paddingTop","notEqual","UICallOptions1","UICallOptions2","stagger","backwards","$targets","$target6","visibility"],"mappings":";;;;;;;;;;;;;;CA2BO,IAAMA,WAAW,iEAAiEC,IAAjE,CAAsEC,UAAUC,SAAhF,CAAjB;CAAA,IACNC,YAAY,WAAWH,IAAX,CAAgBC,UAAUC,SAA1B,CADN;CAAA,IAENE,gBAAgB;CACfC,aAAS,CADM;CAEfC,WAAO,CAFQ;CAGfC,YAAQ,CAHO;CAIfC,kBAAc,CAJC;CAKfC,gBAAY,GALG;CAMfC,oBAAgB;CAND,CAFV;CAAA,IAUNC,oBAAwC;CACvCN,aAASO,OAAOR,cAAcC,OAAd,GAAwB,CAA/B,CAD8B;CAEvCC,WAAOF,cAAcE,KAAd,GAAsB,CAAtB,GAA0B,IAFM;CAGvCC,YAAQH,cAAcG,MAAd,GAAuB,CAAvB,GAA2B;CAHI,CAVlC;CAAA,IAeNM,iBAAkC;CACjCC,WAAO,EAD0B;CAEjCC,cAAU,GAFuB;CAGjCC,YAAQ,OAHyB;CAIjCC,WAAO,IAJ0B;CAKjCC,cAAU,IALuB;CAMjCC,cAAU,IANuB;CAOjCC,UAAM,KAP2B;CAQjCC,WAAO,CAR0B;CASjCC,cAAU;CATuB,CAf5B;CAAA,IA0BNC,IAAMC,OAAeC,MAAf,IAA0BD,OAAeE,KA1BzC;CAAA,IA2BNC,cAAcC,SAASC,cAAT,CAAwB,aAAxB,CA3BR;CAAA,IA4BNC,qBAAsBjB,eAAeE,QAAf,GAAqC,CA5BrD;CAAA,IA6BNgB,wBAAyBlB,eAAeE,QAAf,GAAqC,CA7BxD;CAAA,IA8BNiB,KAAM;CACL,QAAKJ,SAAiBK,YAAtB,EAAoC;CACnC,eAAQL,SAAiBK,YAAzB;CACA,KAFD,MAEO;CACN,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;CAC3B,gBAAIC,MAAMP,SAASQ,aAAT,CAAuB,KAAvB,CAAV;CAEAD,gBAAIE,SAAJ,UAAqB,IAArB,eAAmCH,CAAnC;CACA,gBAAIC,IAAIG,oBAAJ,CAAyB,MAAzB,EAAiCC,MAArC,EAA6C;CAC5CJ,sBAAM,IAAN;CAEA,uBAAOD,CAAP;CACA;CACDC,kBAAM,IAAN;CACA;CACD;CAED,WAAOK,SAAP;CACA,CAlBI,EA9BC;CAkDP,IAAMC,UAA4B,EAAlC;CACA,IAAIC,aAAa,CAAjB;CAEAC,MAAMC,MAAN,CAAaC,OAAb,GAAuB,KAAvB;AAEA,2BAAiCC,SAAsBC;CACtDxB,MAAEyB,IAAF,CAAOD,WAAP,EAAoB,UAACE,QAAD,EAAWC,UAAX;CACnBJ,gBAAQK,KAAR,CAAcF,QAAd,IAA0BC,UAA1B;CACA,KAFD;CAGA;AAED,eAAqBJ;CACpB,WAAO,CAACA,QAAQM,MAAR,GAAiBN,QAAQ,CAAR,CAAjB,GAA8BA,OAA/B,EAAwCO,YAA/C;CACA;AAED;CACC,WAAOC,eAAeA,YAAYC,GAA3B,GAAiCD,YAAYC,GAAZ,EAAjC,GAAqDC,KAAKD,GAAL,EAA5D;CACA;AAED,2BAAiCT,SAAsBG;CACtD,WAAOQ,SAASX,OAAT,EAAkB,OAAlB,EAA2BG,QAA3B,CAAP;CACA;AAED,oBAA0BF;CACzB,QAAMZ,MAAMP,SAASQ,aAAT,CAAuB,KAAvB,CAAZ;CAEAD,QAAIuB,SAAJ,GAAgB,QAAhB;CACAvB,QAAIgB,KAAJ,CAAU9C,OAAV,GAAoBO,OAAOR,cAAcC,OAArB,CAApB;CACA8B,QAAIgB,KAAJ,CAAUQ,KAAV,iBAA8BvD,cAAcK,UAA5C;CACA0B,QAAIgB,KAAJ,CAAU7C,KAAV,GAAkBF,cAAcE,KAAd,GAAsB,IAAxC;CACA6B,QAAIgB,KAAJ,CAAU5C,MAAV,GAAmBH,cAAcG,MAAd,GAAuB,IAA1C;CACA4B,QAAIgB,KAAJ,CAAU3C,YAAV,GAAyBJ,cAAcI,YAAd,GAA6B,IAAtD;CACA2B,QAAIgB,KAAJ,CAAUS,UAAV,gBAAkCxD,cAAcM,cAAhD;CACAiB,gBAAYkC,WAAZ,CAAwB1B,GAAxB;CACAM,YAAQqB,IAAR,CAAa3B,GAAb;CACA,QAAIY,WAAJ,EAAiB;CAChBgB,yBAAiB5B,GAAjB,EAAsBY,WAAtB;CACA;CAED,WAAOZ,GAAP;CACA;AAED,eAAqB6B;CACpB,QAAIC,aAAJ;CAAA,QACCC,eADD;CAGA,WAAO;CACN,YAAI,CAACD,IAAL,EAAW;CACVC,qBAASF,KAAKG,KAAL,CAAW,IAAX,EAAiBC,SAAjB,CAAT;CACAJ,mBAAOC,OAAO,IAAd,CAFU;CAGV;CAED,eAAOC,MAAP;CACA,KAPD;CAQA;AAED,gBAAsBG;CACrB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD;CAAA,eAAaC,WAAWD,OAAX,EAAoBF,EAApB,CAAb;CAAA,KAAZ,CAAP;CACA;AAUD,qBAA2BI,QAAiBC,OAAgBC;CAC3D,QAAI,CAACF,MAAL,EAAa;CACZ,YAAMG,WAAWlC,UAAjB;CAEAA,qBAAa,CAAb;CAEA,eAAOkC,QAAP;CACA;CACD,QAAMX,OAAOQ,OAAOI,KAAP,CAAa,CAAb,CAAb;CAEAnC,kBAAcgC,KAAd;CACAF,eAAW;CACVG,iBAASV,IAAT;CACA,KAFD,EAEG,CAFH;CAGA;AAED,CAUAtB,MAAMmC,QAAN,CAAe;CACd,QAAI;CACHlD,iBAASmD,gBAAT,CAA0B,qBAA1B,EACEC,QADF,CACW,MADX;CAEA,KAHD,CAGE,SAAA,EAAM;CACP;;CAED;CACA,WAAOvC,QAAQF,MAAf,EAAuB;CACtB,YAAI;CACHZ,wBAAYsD,WAAZ,CAAwBxC,QAAQyC,GAAR,EAAxB;CACA,SAFD,CAEE,SAAA,EAAM;CACP;CACA;CACD;CACD;CACAC;CACA;CACA1B,aAAS2B,QAAT,CAAkBC,KAAlB;CACA,CAnBD;CAqBA;CACA1C,MAAMsB,IAAN,CAAW,UAACqB,OAAD;CACV;CACAC,YAAQC,GAAR,CAAY,SAAZ,EAAuBF,QAAQG,KAA/B,EAAsC,WAAtC,EAAmDH,QAAQI,MAA3D,EAAmE,WAAnE,EAAgFJ,QAAQK,MAAxF,EAAgG,YAAhG,EAA8GL,QAAQM,OAAtH;CACA,CAHD;CAKA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;;CC1MAjD,MAAMkD,MAAN,CAAa,MAAb;;;;;;;;CCIAlD,MAAM3C,IAAN,CAAW,WAAX,EAAwB,UAACyE,MAAD;CACvB,QAAMqB,eAAe,SAAfA,YAAe;CACpB;CACA,KAFD;CAAA,QAGCC,eAAe,IAHhB;CAAA,QAICC,aAAa,YAJd;CAAA,QAKCC,cAA+B;CAC9BlF,kBAAU,GADoB;CAE9BC,gBAAQgF,UAFsB;CAG9B9E,kBAAU4E;CAHoB,KALhC;CAUA,QAAI5B,eAAJ;CAEAO,WAAOyB,MAAP,CAAc,EAAd;CAEA;;;CAIAhC,aAAST,SAAS0C,WAAT,EAAsBxF,iBAAtB,CAAT;CACA8D,WAAO2B,EAAP,CAAUlC,OAAO3B,MAAjB,EACC,yDADD;CAEAkC,WAAO2B,EAAP,CAAUlC,OAAOc,QAAP,CAAgBqB,UAAhB,CAA2B9D,MAArC,EACC,yDADD;CAGA2B,aAAST,SAAS0C,WAAT,EAAsBxF,iBAAtB,EAAyCoF,YAAzC,CAAT;CACAtB,WAAO6B,KAAP,CAAapC,OAAOc,QAAP,CAAgBqB,UAAhB,CAA2B,CAA3B,EAA8BE,OAA9B,CAAsCxF,QAAnD,EAA6DgF,YAA7D,EACC,2EADD;CAEA7B,aAAST,SAAS0C,WAAT,EAAsBxF,iBAAtB,EAAyC,MAAzC,CAAT;CACA8D,WAAO6B,KAAP,CAAapC,OAAOc,QAAP,CAAgBqB,UAAhB,CAA2B,CAA3B,EAA8BE,OAA9B,CAAsCxF,QAAnD,EAA6D,GAA7D,EACC,yEADD;CAEAmD,aAAST,SAAS0C,WAAT,EAAsBxF,iBAAtB,EAAyC,QAAzC,CAAT;CACA8D,WAAO6B,KAAP,CAAapC,OAAOc,QAAP,CAAgBqB,UAAhB,CAA2B,CAA3B,EAA8BE,OAA9B,CAAsCxF,QAAnD,EAA6D,GAA7D,EACC,2EADD;CAEAmD,aAAST,SAAS0C,WAAT,EAAsBxF,iBAAtB,EAAyC,MAAzC,CAAT;CACA8D,WAAO6B,KAAP,CAAapC,OAAOc,QAAP,CAAgBqB,UAAhB,CAA2B,CAA3B,EAA8BE,OAA9B,CAAsCxF,QAAnD,EAA6D,GAA7D,EACC,yEADD;CAGAmD,aAAST,SAAS0C,WAAT,EAAsBxF,iBAAtB,EAAyCqF,UAAzC,CAAT;CACAvB,WAAO6B,KAAP,SAAoBpC,OAAOc,QAAP,CAAgBqB,UAAhB,CAA2B,CAA3B,EAA8BE,OAA9B,CAAsCvF,MAA1D,GAAkE,UAAlE,EACC,gEADD;CAGAkD,aAAST,SAAS0C,WAAT,EAAsBxF,iBAAtB,EAAyCmF,YAAzC,CAAT;CACArB,WAAO6B,KAAP,SAAoBpC,OAAOc,QAAP,CAAgBqB,UAAhB,CAA2B,CAA3B,EAA8BE,OAA9B,CAAsCrF,QAA1D,GAAoE,UAApE,EACC,kEADD;CAGAgD,aAAST,SAAS0C,WAAT,EAAsBxF,iBAAtB,EAAyCoF,YAAzC,EAAuD,CAAC,IAAD,EAAO,CAAP,EAAU,IAAV,EAAgB,CAAhB,CAAvD,CAAT;CACAtB,WAAO6B,KAAP,CAAapC,OAAOc,QAAP,CAAgBqB,UAAhB,CAA2B,CAA3B,EAA8BE,OAA9B,CAAsCxF,QAAnD,EAA6DgF,YAA7D,EACC,2EADD;CAEAtB,WAAO6B,KAAP,CAAapC,OAAOc,QAAP,CAAgBqB,UAAhB,CAA2B,CAA3B,EAA8BE,OAA9B,CAAsCvF,MAAtC,CAA6C,GAA7C,EAAkD,CAAlD,EAAqD,CAArD,CAAb,EAAsE,kBAAtE,EACC,2EADD;CAGAkD,aAAST,SAAS0C,WAAT,EAAsBxF,iBAAtB,EAAyCoF,YAAzC,EAAuDD,YAAvD,CAAT;CACArB,WAAO6B,KAAP,CAAapC,OAAOc,QAAP,CAAgBqB,UAAhB,CAA2B,CAA3B,EAA8BE,OAA9B,CAAsCxF,QAAnD,EAA6DgF,YAA7D,EACC,6EADD;CAEAtB,WAAO6B,KAAP,CAAapC,OAAOc,QAAP,CAAgBqB,UAAhB,CAA2B,CAA3B,EAA8BE,OAA9B,CAAsCrF,QAAnD,EAA6D4E,YAA7D,EACC,6EADD;CAGA5B,aAAST,SAAS0C,WAAT,EAAsBxF,iBAAtB,EAAyCoF,YAAzC,EAAuDC,UAAvD,EAAmEF,YAAnE,CAAT;CACArB,WAAO6B,KAAP,CAAapC,OAAOc,QAAP,CAAgBqB,UAAhB,CAA2B,CAA3B,EAA8BE,OAA9B,CAAsCxF,QAAnD,EAA6DgF,YAA7D,EACC,qFADD;CAEAtB,WAAO6B,KAAP,SAAoBpC,OAAOc,QAAP,CAAgBqB,UAAhB,CAA2B,CAA3B,EAA8BE,OAA9B,CAAsCvF,MAA1D,GAAkE,UAAlE,EACC,qFADD;CAEAyD,WAAO6B,KAAP,CAAapC,OAAOc,QAAP,CAAgBqB,UAAhB,CAA2B,CAA3B,EAA8BE,OAA9B,CAAsCrF,QAAnD,EAA6D4E,YAA7D,EACC,qFADD;CAGA5B,aAAST,SAAS0C,WAAT,EAAsBxF,iBAAtB,EAAyCsF,WAAzC,CAAT;CACAxB,WAAO6B,KAAP,CAAapC,OAAOc,QAAP,CAAgBqB,UAAhB,CAA2B,CAA3B,EAA8BE,OAA9B,CAAsCxF,QAAnD,EAA6DkF,YAAYlF,QAAzE,EACC,mEADD;CAGA0C,aAAS,EAAC+C,UAAU,CAACL,WAAD,CAAX,EAA0BM,YAAY9F,iBAAtC,EAAyD4F,SAASN,WAAlE,EAAT;CACAxB,WAAO6B,KAAP,CAAapC,OAAOc,QAAP,CAAgBqB,UAAhB,CAA2B,CAA3B,EAA8BE,OAA9B,CAAsCxF,QAAnD,EAA6DkF,YAAYlF,QAAzE,EACC,mGADD;CAGA0C,aAAS,EAAC+C,UAAU,CAACL,WAAD,CAAX,EAA0BM,YAAY,MAAtC,EAA8CF,SAASN,WAAvD,EAAT;CACAxB,WAAO6B,KAAP,CAAapC,OAAOc,QAAP,CAAgBqB,UAAhB,CAA2B,CAA3B,EAA8BE,OAA9B,CAAsCxF,QAAnD,EAA6DkF,YAAYlF,QAAzE,EACC,kGADD;CAGA;CACA;CACA;CACA;CACA;CAEA;CACA;CACA;CACA;CAEA;CACA;CACA;CACA;CAEA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,CAlHD;;CCAA4B,MAAM3C,IAAN,CAAW,mBAAX,EAAgC,UAACyE,MAAD;CAC/B,QAAMR,OAAOQ,OAAOI,KAAP,CAAa,CAAb,CAAb;CAAA,QACC6B,gBAAgB,EAACnG,QAAQ,MAAT,EAAiBD,OAAO,OAAxB,EADjB;CAGAmE,WAAOyB,MAAP,CAAc,CAAd;CAEA;CACAzC,aAAS0C,UAAUO,aAAV,CAAT,EAAmC/F,iBAAnC,EACEgG,IADF,CACO,UAACH,QAAD;CACL/B,eAAO6B,KAAP,CAAaM,KAAKJ,SAAS,CAAT,CAAL,EAAkBK,KAAlB,CAAwBvG,KAArC,EAA4CK,kBAAkBL,KAA9D,EAAqE,mCAArE;CACAmE,eAAO6B,KAAP,CAAaM,KAAKJ,SAAS,CAAT,CAAL,EAAkBK,KAAlB,CAAwBtG,MAArC,EAA6CI,kBAAkBJ,MAA/D,EAAuE,mCAAvE;CAEA0D;CACA,KANF;CAQAR,aAAS0C,WAAT,EAAsBxF,iBAAtB,EACEqE,QADF,CACW0B,aADX,EAEEC,IAFF,CAEO,UAACH,QAAD;CACL;CACA/B,eAAO6B,KAAP,CAAaM,KAAKJ,SAAS,CAAT,CAAL,EAAkBK,KAAlB,CAAwBvG,KAArC,EAA4CoG,cAAcpG,KAA1D,EAAiE,kCAAjE;CACAmE,eAAO6B,KAAP,CAAaM,KAAKJ,SAAS,CAAT,CAAL,EAAkBK,KAAlB,CAAwBtG,MAArC,EAA6CmG,cAAcnG,MAA3D,EAAmE,kCAAnE;CAEA0D;CACA,KARF;CASA,CAxBD;;CCAAtB,MAAM3C,IAAN,CAAW,mBAAX,EAAgC,UAACyE,MAAD;CAC/B,QAAMR,OAAOQ,OAAOI,KAAP,CAAa,CAAb,CAAb;CAEA;CACApB,aAAS0C,WAAT,EAAsBxF,iBAAtB,EACEgG,IADF,CACO,UAACH,QAAD;CACL/B,eAAO6B,KAAP,CAAa7C,SAAS+C,SAAS,CAAT,CAAT,EAAsB,OAAtB,EAA+B,OAA/B,CAAb,EAAsD7F,kBAAkBL,KAAxE,EAA+E,gCAA/E;CACAmE,eAAO6B,KAAP,CAAa7C,SAAS+C,SAAS,CAAT,CAAT,EAAsB,OAAtB,EAA+B,SAA/B,CAAb,EAAwD7F,kBAAkBN,OAA1E,EAAmF,gCAAnF;CAEA4D;CACA,KANF;CAOA,CAXD;;CCAAtB,MAAMmE,IAAN,CAAW,yBAAX,EAAsC,UAACrC,MAAD;CACrC,QAAMsC,kBAAkB;CACvBC,qBAAa,MADU;CAEvBzG,gBAAQ,OAFe;CAGvB0G,sBAAc,KAHS;CAIvBC,oBAAY,OAJW;CAKvB1G,sBAAc,KALS;CAMvB2G,mBAAW,OANY;CAOvBC,oBAAY,MAPW;CAQvBC,qBAAa,MARU;CASvBC,yBAAiB;CATM,KAAxB;CAYA;CACA,QAAMC,WAAWpB,WAAjB;CAEA1C,aAAS8D,QAAT,EAAmBR,eAAnB;CACAtC,WAAO6B,KAAP,CAAaM,KAAKW,QAAL,EAAeV,KAAf,CAAqBG,WAAlC,EAA+CD,gBAAgBC,WAA/D,EAA4E,gDAA5E;CACAvC,WAAO6B,KAAP,CAAaM,KAAKW,QAAL,EAAeV,KAAf,CAAqBS,eAAlC,EAAmDP,gBAAgBO,eAAnE,EAAoF,4CAApF;CAEA;CACA,QAAME,WAAWrB,WAAjB;CAEA1C,aAAS+D,QAAT,EAAmB7G,iBAAnB;CACA8D,WAAO6B,KAAP,CAAaM,KAAKY,QAAL,EAAeX,KAAf,CAAqBvG,KAAlC,EAAyCmH,WAAWrH,cAAcE,KAAzB,CAAzC,EAAiF,wCAAjF;CACAmE,WAAO6B,KAAP,CAAaM,KAAKY,QAAL,EAAeX,KAAf,CAAqBxG,OAAlC,EAA2CoH,WAAWrH,cAAcC,OAAzB,CAA3C,EAAqF,wCAArF;CACAoE,WAAO6B,KAAP,CAAaM,KAAKY,QAAL,EAAeX,KAAf,CAAqBlD,KAAlC,EAAyC8D,WAAWrH,cAAcK,UAAzB,CAAzC,EAAsF,4CAAtF;CAEA;CACA,QAAMiH,6BAA6B,EAACV,aAAa,MAAd,EAAsBzG,QAAQ,MAA9B,EAAsC0G,cAAc,KAApD,EAAnC;CAAA,QACCU,WAAWxB,WADZ;CAGApC,qBAAiB4D,QAAjB,EAA2BZ,eAA3B;CACAtD,aAASkE,QAAT,EAAmBD,0BAAnB;CACAjD,WAAO6B,KAAP,CAAaM,KAAKe,QAAL,EAAed,KAAf,CAAqBG,WAAlC,EAA+CS,WAAWV,gBAAgBC,WAA3B,CAA/C,EAAwF,uCAAxF;CACAvC,WAAO6B,KAAP,CAAaM,KAAKe,QAAL,EAAed,KAAf,CAAqBtG,MAAlC,EAA0CkH,WAAWV,gBAAgBxG,MAA3B,CAA1C,EAA8E,uCAA9E;CACA;CACA;CAEA;CACA,QAAMqH,2BAA2B,EAACZ,aAAa,KAAd,EAAqBzG,QAAQ,KAA7B,EAAoC6G,YAAY,OAAhD,EAAyDC,aAAa,MAAtE,EAA8EH,YAAY,MAA1F,EAAkGC,WAAW,KAA7G,EAAoH3G,cAAc,OAAlI,EAAjC;CAAA,QACCqH,cAAclG,YAAYmG,WAD3B;CAAA,QAECC,eAAepG,YAAYqG,YAF5B;CAAA,QAGCC,iBAAiBxE,SAAS9B,WAAT,EAAsB,OAAtB,EAA+B,UAA/B,CAHlB;CAAA,QAICuG,UAAUT,WAAWhE,SAAS7B,SAASuG,IAAlB,EAAwB,OAAxB,EAAiC,UAAjC,CAAX,CAJX;CAAA,QAKCC,WAAWjC,WALZ;CAOApC,qBAAiBqE,QAAjB,EAA2BrB,eAA3B;CACAtD,aAAS2E,QAAT,EAAmBR,wBAAnB;CAEA;CACA;CACA;CACAnD,WAAO6B,KAAP,CAAa+B,SAASzB,KAAKwB,QAAL,EAAevB,KAAf,CAAqBtG,MAA9B,EAAsC,EAAtC,CAAb,EAAwD+H,KAAKC,KAAL,CAAYd,WAAWV,gBAAgBxG,MAA3B,IAAqCwH,YAAtC,GAAsD,GAAjE,CAAxD,EAA+H,mCAA/H;CACA;CACA;CACA;CACA;CACAtD,WAAO6B,KAAP,CAAa+B,SAASzB,KAAKwB,QAAL,EAAevB,KAAf,CAAqBrG,YAA9B,EAA4C,EAA5C,CAAb,EAA8DiH,WAAWV,gBAAgBvG,YAA3B,IAA2C,GAA3C,GAAiDiH,WAAWW,SAASI,aAAT,CAAuBC,WAAlC,CAA/G,EACC,2BADD;CAGA;CACA;CACA;CACA;CACA;CACA;CAEA;CAEA;CACA,QAAMC,qBAAqB,EAACC,MAAM,QAAP,EAA3B;CAAA,QACCC,iBAAiBhH,SAASQ,aAAT,CAAuB,KAAvB,CADlB;CAGAwG,mBAAeC,YAAf,CAA4B,IAA5B,EAAkC,eAAlC;CACAD,mBAAezF,KAAf,CAAqB+D,UAArB,GAAkCwB,mBAAmBC,IAArD;CACAC,mBAAezF,KAAf,CAAqB7C,KAArB,GAA6B,OAA7B;CACAsI,mBAAezF,KAAf,CAAqB5C,MAArB,GAA8B,OAA9B;CACAqB,aAASuG,IAAT,CAActE,WAAd,CAA0B+E,cAA1B;CAEA,QAAME,WAAW3C,WAAjB;CAEA2C,aAAS3F,KAAT,CAAe4F,QAAf,GAA0B,UAA1B;CACAH,mBAAe/E,WAAf,CAA2BiF,QAA3B;CACArF,aAASqF,QAAT,EAAmBJ,kBAAnB;CAEAjE,WAAO6B,KAAP,CAAa+B,SAASzB,KAAKkC,QAAL,EAAejC,KAAf,CAAqB8B,IAA9B,EAAoC,EAApC,CAAb,EACCL,KAAKU,KAAL,CAAWvB,WAAWiB,mBAAmBC,IAA9B,IAAsClB,WAAWhE,SAAS7B,SAASuG,IAAlB,EAAwB,OAAxB,EAAiC,YAAjC,CAAX,CAAjD,CADD,EAEC,oCAFD;CAGA,CAzFD;;;;;;;;;;;;;;;;;;;;;;;;;;;CCAAxF,MAAM3C,IAAN,CAAW,kBAAX,EAA+B,UAACyE,MAAD;CAC9B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CAEAU,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAAOR,IAAP;CAAA;;;;;;CACfgF,sCAAU9C;;CAEhB1C,qCAASwF,OAAT,EAAkB,EAACN,MAAM,OAAP,EAAlB,EAAmC,EAAC5H,UAAU,EAAX,EAAnC;;oCACMmI,MAAM,GAAN;;;CACNzE,mCAAO6B,KAAP,CAAa6C,iBAAiBF,OAAjB,EAA0B,MAA1B,CAAb,EAAgD,OAAhD,EAAyD,+DAAzD;CACAxF,qCAASwF,OAAT,EAAkB,EAACN,MAAM,KAAP,EAAlB,EAAiC,EAAC5H,UAAU,EAAX,EAAjC;;oCACMmI,MAAM,GAAN;;;CACNzE,mCAAO6B,KAAP,CAAa6C,iBAAiBF,OAAjB,EAA0B,MAA1B,CAAb,EAAgD,KAAhD,EAAuD,sDAAvD;CAEAhF;;;;;;;;YAVqB;CAAA,KAAtB;CAaA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CAEAkB,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAAOR,IAAP;CAAA;;;;;;CACfgF,sCAAU9C;;CAEhB1C,qCAASwF,OAAT,EAAkB,EAACN,MAAM,OAAP,EAAlB,EAAmC,EAAC5H,UAAU,EAAX,EAAnC;;oCACMmI,MAAM,GAAN;;;CACNzF,qCAASwF,OAAT,EAAkB,EAACN,MAAM,CAAP,EAAlB,EAA6B,EAAC5H,UAAU,EAAX,EAA7B;;oCACMmI,MAAM,IAAN;;;CACNzE,mCAAO6B,KAAP,CAAa6C,iBAAiBF,OAAjB,EAA0B,MAA1B,CAAb,EAAgD,KAAhD,EAAuD,sEAAvD;CAEAhF;;;;;;;;YATqB;CAAA,KAAtB;CAYAkB,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAAOR,IAAP;CAAA;;;;;;CACfgF,sCAAU9C;;CAEhB1C,qCAASwF,OAAT,EAAkB,EAACN,MAAM,GAAP,EAAlB,EAA+B,EAAC5H,UAAU,EAAX,EAA/B;;oCACMmI,MAAM,GAAN;;;CACNzE,mCAAO6B,KAAP,CAAa6C,iBAAiBF,OAAjB,EAA0B,MAA1B,CAAb,EAAgD,OAAhD,EAAyD,+DAAzD;CACAxF,qCAASwF,OAAT,EAAkB,EAACN,MAAM,CAAP,EAAlB,EAA6B,EAAC5H,UAAU,EAAX,EAA7B;;oCACMmI,MAAM,GAAN;;;CACNzE,mCAAO6B,KAAP,CAAa6C,iBAAiBF,OAAjB,EAA0B,MAA1B,CAAb,EAAgD,KAAhD,EAAuD,+DAAvD;CAEAhF;;;;;;;;YAVqB;CAAA,KAAtB;CAYA,CArED;;CCJAtB,MAAMkD,MAAN,CAAa,QAAb;;CCIAlD,MAAM3C,IAAN,CAAW,OAAX,EAAoB,UAACyE,MAAD;CACnBU,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrB,YAAMmF,aAAa,CAACjD,WAAD,EAAcA,WAAd,CAAnB;CAEA1C,iBAAS2F,UAAT,EAAqBzI,iBAArB,EAAwC;CACvCI,sBAAUe,kBAD6B;CAEvCb,iBAFuC,iBAEjCuF,QAFiC;CAGtC/B,uBAAO4E,SAAP,CAAiB7C,QAAjB,EAA2B4C,UAA3B,EAAuC,gCAAvC;CAEAnF;CACA;CANsC,SAAxC;CAQA,KAXD;CAaAQ,WAAOyB,MAAP,CAAcf,YAAd;CACA,CAfD;;CCAAxC,MAAM3C,IAAN,CAAW,UAAX,EAAuB,UAACyE,MAAD;CACtBU,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrB,YAAMmF,aAAa,CAACjD,WAAD,EAAcA,WAAd,CAAnB;CAEA1C,iBAAS2F,UAAT,EAAqBzI,iBAArB,EAAwC;CACvCI,sBAAUe,kBAD6B;CAEvCZ,oBAFuC,oBAE9BsF,QAF8B;CAGtC/B,uBAAO4E,SAAP,CAAiB7C,QAAjB,EAA2B4C,UAA3B,EAAuC,gCAAvC;CAEAnF;CACA;CANsC,SAAxC;CAQA,KAXD;CAaAQ,WAAOyB,MAAP,CAAcf,YAAd;CACA,CAfD;;CCAAxC,MAAM3C,IAAN,CAAW,OAAX,EAAoB,UAACyE,MAAD;CACnB,QAAM6E,YAAY,GAAlB;CAEAnE,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrB,YAAMsF,QAAQC,QAAd;CAEA/F,iBAAS0C,WAAT,EAAsBxF,iBAAtB,EAAyC;CACxCI,sBAAUF,eAAeE,QADe;CAExCM,mBAAOiI,SAFiC;CAGxCrI,iBAHwC,iBAGlCuF,QAHkC,EAGxBiD,UAHwB;CAIvChF,uBAAOiF,KAAP,CAAaF,WAAWD,KAAxB,EAA+BD,SAA/B,EAA0C,EAA1C,EAA8C,8CAA9C;CAEArF;CACA;CAPuC,SAAzC;CASA,KAZD;CAcAkB,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrB,YAAMsF,QAAQC,QAAd;CAEA/F,iBAAS0C,WAAT,EAAsBxF,iBAAtB,EAAyC;CACxCI,sBAAUF,eAAeE,QADe;CAExCM,mBAAOiI;CAFiC,SAAzC,EAIEtE,QAJF,CAIWrE,iBAJX,EAI8B;CAC5BI,sBAAUF,eAAeE,QADG;CAE5BM,mBAAOiI,SAFqB;CAG5BrI,iBAH4B,iBAGtBuF,QAHsB,EAGZiD,UAHY;CAI3BhF,uBAAOiF,KAAP,CAAaF,WAAWD,KAAxB,EAAgCD,YAAY,CAAb,GAAmBzI,eAAeE,QAAjE,EAAsF,EAAtF,EAA0F,8CAA1F;CAEAkD;CACA;CAP2B,SAJ9B;CAaA,KAhBD;CAkBAQ,WAAOyB,MAAP,CAAcf,YAAd;CACA,CApCD;;CCAAxC,MAAM3C,IAAN,CAAW,QAAX,EAAqB,UAACyE,MAAD;CACpBU,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrB,YAAI0F,UAAU,KAAd;CAEA,YAAI;CACHA,sBAAU,IAAV;CACAlG,qBAAS0C,WAAT,EAAsBxF,iBAAtB,EAAyC,EAACK,QAAQ,MAAT,EAAzC;CACA,SAHD,CAGE,OAAO4I,CAAP,EAAU;CACXD,sBAAU,KAAV;CACA;CACDlF,eAAO2B,EAAP,CAAUuD,OAAV,EAAmB,wCAAnB;CAEA1F;CACA,KAZD;CAcAkB,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrB,YAAI0F,UAAU,KAAd;CAEA,YAAI;CACHA,sBAAU,IAAV;CACAlG,qBAAS0C,WAAT,EAAsBxF,iBAAtB,EAAyC,EAACK,QAAQ,CAAC,GAAD,EAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,CAAT,EAAzC;CACAyC,qBAAS0C,WAAT,EAAsBxF,iBAAtB,EAAyC,EAACK,QAAQ,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAT,EAAzC;CACA,SAJD,CAIE,OAAO4I,CAAP,EAAU;CACXD,sBAAU,KAAV;CACA;CACDlF,eAAO2B,EAAP,CAAUuD,OAAV,EAAmB,0CAAnB;CAEA1F;CACA,KAbD;CAeAkB,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrB;CACA;CACA,YAAM4F,oBAAoB,CAAC,IAAD,EAAO,CAAC,IAAR,EAAc,IAAd,EAAoB,IAApB,CAA1B;CAAA,YACCC,0BAA0B,IAD3B;CAAA,YAECC,wBAAwB,CAAC,IAF1B;CAIAtG,iBAAS0C,WAAT,EAAsBxF,iBAAtB,EAAyC;CACxCK,oBAAQ6I,iBADgC;CAExC5I,iBAFwC,iBAElCuF,QAFkC,EAExBwD,SAFwB;CAGvCvF,uBAAOiF,KAAP,CAAaM,UAAUzD,OAAV,CAAkBvF,MAAlB,CAAyB8I,uBAAzB,EAAkD,CAAlD,EAAqD,CAArD,CAAb,EAAsEC,qBAAtE,EAA6F,KAA7F,EAAoG,uCAApG;CAEA9F;CACA;CANuC,SAAzC;CAQA,KAfD;CAiBAkB,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrB;CACA,YAAMgG,uBAAuB,CAAC,GAAD,EAAM,EAAN,CAA7B;CAAA,YACCC,6BAA6B,IAD9B;CAAA,YAECC,2BAA2B,KAF5B;CAKA1G,iBAAS0C,WAAT,EAAsBxF,iBAAtB,EAAyC;CACxCI,sBAAU,GAD8B;CAExCC,oBAAQiJ,oBAFgC;CAGxChJ,iBAHwC,iBAGlCuF,QAHkC,EAGxBwD,SAHwB;CAIvCvF,uBAAOiF,KAAP,CAAaM,UAAUzD,OAAV,CAAkBvF,MAAlB,CAAyBkJ,0BAAzB,EAAqD,CAArD,EAAwD,CAAxD,CAAb,EAAyEC,wBAAzE,EAAmG,EAAnG,EAAuG,wDAAvG;CAEAlG;CACA;CAPuC,SAAzC;CASA,KAhBD;CAkBA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CAEAkB,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrB;CACA,YAAMmG,kBAAkB,CAAC,CAAD,CAAxB;CAAA,YACCC,wBAAwB,IADzB;CAAA,YAECC,sBAAsB,IAFvB;CAIA7G,iBAAS0C,WAAT,EAAsBxF,iBAAtB,EAAyC;CACxCK,oBAAQoJ,eADgC;CAExCnJ,iBAFwC,iBAElCuF,QAFkC,EAExBwD,SAFwB;CAGvCvF,uBAAOiF,KAAP,CAAaM,UAAUzD,OAAV,CAAkBvF,MAAlB,CAAyBqJ,qBAAzB,EAAgD,CAAhD,EAAmD,CAAnD,CAAb,EAAoEC,mBAApE,EAAyF,IAAzF,EAA+F,qCAA/F;CACArG;CACA;CALuC,SAAzC;CAOA,KAbD;CAeAkB,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrBR,iBAAS0C,WAAT,EAAsB,EAAC9F,SAAS,CAAC,CAAD,EAAI,QAAJ,EAAc,CAAd,CAAV,EAAtB,EAAmD;CAClDU,sBAAUe,kBADwC;CAElDb,iBAFkD,iBAE5CuF,QAF4C;CAGjD/B,uBAAO6B,KAAP,CAAaE,SAASxB,QAAT,CAAkB,OAAlB,EAA2B,SAA3B,CAAb,EAAoD,CAApD,EAAuD,wCAAvD;CACA,aAJiD;;CAKlD7D,sBAAUoJ,KAAK,UAAC/D,QAAD;CACd/B,uBAAO6B,KAAP,CAAaE,SAASxB,QAAT,CAAkB,OAAlB,EAA2B,SAA3B,CAAb,EAAoD,CAApD,EAAuD,2CAAvD;CACA,aAFS,CALwC;CAQlD9D,oBARkD,oBAQzCsF,QARyC;CASjD/B,uBAAO6B,KAAP,CAAaE,SAASxB,QAAT,CAAkB,OAAlB,EAA2B,SAA3B,CAAb,EAAoD,CAApD,EAAuD,2CAAvD;CAEAf;CACA;CAZiD,SAAnD;CAcA,KAfD;CAiBAkB,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrBR,iBAAS0C,WAAT,EAAsB,EAAC9F,SAAS,CAAC,CAAD,EAAI,UAAJ,EAAgB,CAAhB,CAAV,EAAtB,EAAqD;CACpDU,sBAAUe,kBAD0C;CAEpDb,iBAFoD,iBAE9CuF,QAF8C;CAGnD/B,uBAAO6B,KAAP,CAAaE,SAASxB,QAAT,CAAkB,OAAlB,EAA2B,SAA3B,CAAb,EAAoD,CAApD,EAAuD,0CAAvD;CACA,aAJmD;;CAKpD7D,sBAAUoJ,KAAK,UAAC/D,QAAD;CACd/B,uBAAO6B,KAAP,CAAaE,SAASxB,QAAT,CAAkB,OAAlB,EAA2B,SAA3B,CAAb,EAAoD,CAApD,EAAuD,6CAAvD;CACA,aAFS,CAL0C;CAQpD9D,oBARoD,oBAQ3CsF,QAR2C;CASnD/B,uBAAO6B,KAAP,CAAaE,SAASxB,QAAT,CAAkB,OAAlB,EAA2B,SAA3B,CAAb,EAAoD,CAApD,EAAuD,6CAAvD;CAEAf;CACA;CAZmD,SAArD;CAcA,KAfD;CAiBAkB,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrBR,iBAAS0C,WAAT,EAAsB,EAAC9F,SAAS,CAAC,CAAD,EAAI,QAAJ,EAAc,CAAd,CAAV,EAAtB,EAAmD;CAClDU,sBAAUe,kBADwC;CAElDb,iBAFkD,iBAE5CuF,QAF4C;CAGjD/B,uBAAO6B,KAAP,CAAaE,SAASxB,QAAT,CAAkB,OAAlB,EAA2B,SAA3B,CAAb,EAAoD,CAApD,EAAuD,wCAAvD;CACA,aAJiD;;CAKlD7D,sBAAUoJ,KAAK,UAAC/D,QAAD;CACd/B,uBAAO6B,KAAP,CAAaE,SAASxB,QAAT,CAAkB,OAAlB,EAA2B,SAA3B,CAAb,EAAoD,CAApD,EAAuD,2CAAvD;CACA,aAFS,CALwC;CAQlD9D,oBARkD,oBAQzCsF,QARyC;CASjD/B,uBAAO6B,KAAP,CAAaE,SAASxB,QAAT,CAAkB,OAAlB,EAA2B,SAA3B,CAAb,EAAoD,CAApD,EAAuD,2CAAvD;CAEAf;CACA;CAZiD,SAAnD;CAcA,KAfD;CAiBAQ,WAAOyB,MAAP,CAAcf,YAAd;CACA,CA/ID;;;CCAAxC,MAAM3C,IAAN,CAAW,WAAX,EAAwB,UAAOyE,MAAP;CAAA;;;;;;;CACnBC;CACEuE,kCAAU9C,aACfqE,aAAa,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,GACbC,YAAY,SAAZA,SAAY,CAACC,SAAD;CACX,gCAAIC,UAAU,CAAd;CAEAlH,qCAAS2B,QAAT,CAAkBwF,QAAlB,GAA6BF,SAA7B;CACA;CACAjG,mCAAO6B,KAAP,CAAaoE,SAAb,EAAwBjH,SAAS2B,QAAT,CAAkBwF,QAA1C,EAAoD,iCAAiCF,SAArF;CAEA,mCAAOjH,SAASwF,OAAT,EAAkBtI,iBAAlB,EACN;CACCI,0CAAU,IADX;CAECI,wCAFD;CAGEwJ;CACA;CAJF,6BADM,EAOLhE,IAPK,CAOA;CAAA,uCAAMgE,OAAN;CAAA,6BAPA,CAAP;CAQA;;CAEFlG,+BAAOyB,MAAP,CAAcsE,WAAWjI,MAAX,GAAoB,CAAlC;CACA;;;;;qCACwBiI;;;;;;;;CAAbE;uCACVjG;;gCAAyBgG,UAAUC,SAAV;;;uCAAdhG;uCAAuCgG,YAAY;;uDAAiBhG;;qCAAxE0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAxBe;CAAA,CAAxB;;CCAAzD,MAAM3C,IAAN,CAAW,MAAX,EAAmB,UAACyE,MAAD;CAClBU,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrB,YAAMgC,cAAc,EAAC7E,MAAM,CAAP,EAAUC,OAAO,GAAjB,EAAsBN,UAAU,GAAhC,EAApB;CAAA,YACCwI,QAAQC,QADT;CAEA,YAAIvI,SAAQ,CAAZ;CAAA,YACCC,YAAW,CADZ;CAAA,YAECE,OAAO,CAFR;CAAA,YAGCyJ,sBAAsB,CAHvB;CAKApH,iBAAS0C,WAAT,EAAsBxF,iBAAtB,EACC;CACCS,kBAAM6E,YAAY7E,IADnB;CAECC,mBAAO4E,YAAY5E,KAFpB;CAGCN,sBAAUkF,YAAYlF,QAHvB;CAICE,iBAJD;CAKEA;CACA,aANF;CAOCE,oBAPD,oBAOUqF,QAPV,EAOoBsE,eAPpB;CAQE,oBAAID,sBAAsBC,eAA1B,EAA2C;CAC1C1J;CACA;CACDyJ,sCAAsBC,eAAtB;CACA,aAZF;CAaC5J,oBAbD;CAcEA;CACA;CAfF,SADD,EAkBEyF,IAlBF,CAkBO;CACLlC,mBAAO6B,KAAP,CAAarF,MAAb,EAAoB,CAApB,EAAuB,kCAAvB;CACAwD,mBAAO6B,KAAP,CAAalF,IAAb,EAAmB6E,YAAY7E,IAAZ,GAAmB,CAAnB,GAAuB,CAA1C,EAA6C,0EAA7C;CACAqD,mBAAOiF,KAAP,CAAaF,WAAWD,KAAxB,EAA+B,CAACtD,YAAY5E,KAAZ,GAAoB4E,YAAYlF,QAAjC,IAA6CK,IAA5E,EAAkF,EAAlF,EAAsF,4CAAtF;CACAqD,mBAAO6B,KAAP,CAAapF,SAAb,EAAuB,CAAvB,EAA0B,qCAA1B;CAEA+C;CACA,SAzBF;CA0BA,KAlCD;CAoCAQ,WAAOyB,MAAP,CAAcf,YAAd;CACA,CAtCD;;CCAAxC,MAAM3C,IAAN,CAAW,UAAX,EAAuB,UAACyE,MAAD;CACtBU,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrB,YAAMgF,UAAU9C,WAAhB;CAEA1C,iBAASwF,OAAT,EAAkBtI,iBAAlB,EAAqC;CACpCI,sBAAUe,kBAD0B;CAEpCX,sBAAUoJ,KAAK,UAAS/D,QAAT,EAAmBsE,eAAnB,EAAoCC,WAApC;CACdtG,uBAAO4E,SAAP,CAAiB7C,QAAjB,EAA2B,CAACyC,OAAD,CAA3B,EAAsC,gCAAtC;CACAxE,uBAAO4E,SAAP,CAAiB,IAAjB,EAAuB,CAACJ,OAAD,CAAvB,EAAkC,wCAAlC;CACAxE,uBAAO6B,KAAP,CAAawE,mBAAmB,CAAnB,IAAwBA,mBAAmB,CAAxD,EAA2D,IAA3D,EAAiE,yCAAjE;CACArG,uBAAO6B,KAAP,CAAayE,cAAcjJ,qBAAqB,EAAhD,EAAoD,IAApD,EAA0D,qCAA1D;CAEAmC;CACA,aAPS;CAF0B,SAArC;CAWA,KAdD;CAgBAQ,WAAOyB,MAAP,CAAcf,YAAd;CACA,CAlBD;;CCAAxC,MAAM3C,IAAN,CAAW,OAAX,EAAoB,UAACyE,MAAD;CACnB,QAAMR,OAAOQ,OAAOI,KAAP,CAAa,CAAb,CAAb;CAAA,QACCmG,YAAY,QADb;CAAA,QAEC/B,UAAU9C,WAFX;CAAA,QAGC8E,SAAShC,QAAQjE,QAAR,CAAiB,OAAjB,EAA0B,SAA1B,CAHV;CAAA;CAICkG,WAAOtE,KAAKqC,OAAL,CAJR;CAKA,QAAIkC,cAAJ;CAAA,QACCC,cADD;CAIA3G,WAAOyB,MAAP,CAAc,CAAd;CAEAzB,WAAO2B,EAAP,CAAU8E,KAAKG,SAAL,CAAeL,SAAf,MAA8BxI,SAAxC,EAAmD,wBAAnD;CAEAyG,YAAQjE,QAAR,CAAiBrE,iBAAjB,EAAoC;CACnCG,eAAOkK,SAD4B;CAEnC/J,aAFmC;CAGlCkK,oBAAQ,IAAR;CACA,SAJkC;CAKnCjK,gBALmC;CAMlCiK,oBAAQ,KAAR;CACA1G,mBAAO2B,EAAP,CAAU,CAACgF,KAAX,EAAkB,uCAAlB;CAEAnH;CACA;CAVkC,KAApC;CAYAQ,WAAO2B,EAAP,CAAU8E,KAAKG,SAAL,CAAeL,SAAf,MAA8BxI,SAAxC,EAAmD,2BAAnD;CAEAyG,YAAQjE,QAAR,CAAiBrE,iBAAjB,EAAoC;CACnCG,eAAOkK,SAD4B;CAEnC/J,aAFmC;CAGlCmK,oBAAQ,IAAR;CACA3G,mBAAO2B,EAAP,CAAU+E,UAAU,KAApB,EAA2B,sCAA3B;CAEAlH;CACA,SAPkC;CAQnC/C,gBARmC;CASlCkK,oBAAQ,KAAR;CACA;CAVkC,KAApC;CAYA3G,WAAO2B,EAAP,CAAU8E,KAAKG,SAAL,CAAeL,SAAf,CAAV,EAAqC,qBAArC;CAEA/B,YAAQjE,QAAR,CAAiBrE,iBAAjB,EAAoC;CACnCM,aADmC;AAElCqK,CACA7G,mBAAO2B,EAAP,CAAU+E,UAAU,IAApB,EAA0B,+CAA1B;CAEAlH;CACA,SANkC;CAOnC/C,gBAPmC;AAQlCoK,CACA;CATkC,KAApC;CAYArC,YAAQjE,QAAR,CAAiBrE,iBAAjB,EAAoC;CACnCG,eAAO,KAD4B;CAEnCG,aAFmC;CAGlCwD,mBAAO2B,EAAP,CAAU+E,UAAU,IAApB,EAA0B,2CAA1B;CAEAlH;CACA;CANkC,KAApC;CAQA,CA9DD;;CCAAtB,MAAM3C,IAAN,CAAW,QAAX,EAAqB,UAACyE,MAAD;CACpBU,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrB,YAAMgC,cAAc,EAACsF,QAAQ,CAAT,EAAYlK,OAAO,GAAnB,EAAwBN,UAAU,GAAlC,EAApB;CAAA,YACCwI,QAAQ/F,KAAKD,GAAL,EADT;CAEA,YAAItC,SAAQ,CAAZ;CAAA,YACCC,YAAW,CADZ;CAAA,YAECqK,SAAS,CAFV;CAIA9H,iBAAS0C,WAAT,EAAsBxF,iBAAtB,EAAyC;CACxC4K,oBAAQtF,YAAYsF,MADoB;CAExClK,mBAAO4E,YAAY5E,KAFqB;CAGxCN,sBAAUkF,YAAYlF,QAHkB;CAIxCE,iBAJwC;CAKvCA;CACA,aANuC;CAOxCE,oBAPwC,oBAO/BqF,QAP+B,EAOrBsE,eAPqB;CAQvC,oBAAIA,oBAAoB,CAAxB,EAA2B;CAC1BS;CACA;CACD,aAXuC;CAYxCrK,oBAZwC;CAavCA;CACAuD,uBAAO6B,KAAP,CAAarF,MAAb,EAAoB,CAApB,EAAuB,kCAAvB;CACAwD,uBAAO6B,KAAP,CAAaiF,MAAb,EAAqBtF,YAAYsF,MAAZ,GAAqB,CAA1C,EAA6C,qEAA7C;CACA9G,uBAAOiF,KAAP,CAAalG,KAAKD,GAAL,KAAagG,KAA1B,EAAiC,CAACtD,YAAY5E,KAAZ,GAAoB4E,YAAYlF,QAAjC,KAA8CkF,YAAYsF,MAAZ,GAAqB,CAAnE,CAAjC,EAAwG,CAACtF,YAAYsF,MAAZ,GAAqB,CAAtB,IAA2B,EAA3B,GAAgC,EAAxI,EACC,2CADD;CAEA9G,uBAAO6B,KAAP,CAAapF,SAAb,EAAuB,CAAvB,EAA0B,qCAA1B;CAEA+C;CACA;CArBuC,SAAzC;CAuBA,KA9BD;CAgCAQ,WAAOyB,MAAP,CAAcf,YAAd;CACA,CAlCD;;CCKAxC,MAAM3C,IAAN,CAAW,OAAX,EAAoB,UAACyE,MAAD;CACnB,QAAMpD,QAAQ,GAAd;CAAA,QACCN,WAAW,GADZ;CAAA,QAECyK,aAAahC,QAFd;CAIArE,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrBR,iBAAS2B,QAAT,CAAkBqG,KAAlB,GAA0B,CAA1B;CACAhI,iBAAS0C,WAAT,EAAsBxF,iBAAtB,EAAyC;CACxC8K,mBAAO,CADiC;CAExCxK,iBAFwC,iBAElCuF,QAFkC;CAGvC/B,uBAAO6B,KAAP,CAAaE,SAASxB,QAAT,CAAkBqB,UAAlB,CAA6B,CAA7B,EAAgCE,OAAhC,CAAwCkF,KAArD,EAA4D,CAA5D,EAA+D,qCAA/D;CAEAxH;CACA;CANuC,SAAzC;CAQA,KAVD;CAYAkB,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrBR,iBAAS0C,WAAT,EAAsBxF,iBAAtB,EAAyC;CACxCI,8BADwC;CAExCE,iBAFwC,iBAElCuF,QAFkC;CAGvCA,yBAASkF,OAAT,GAAmBlC,QAAnB;CACA,aAJuC;CAKxCtI,oBALwC,oBAK/BsF,QAL+B;CAMvC,oBAAMmF,SAASnC,WAAWhD,SAASkF,OAAnC;CAAA,oBACCE,WAAW7K,WAAW,CADvB;CAGA0D,uBAAOiF,KAAP,CAAaiC,MAAb,EAAqBC,QAArB,EAA+B,EAA/B,4DAA2FtD,KAAKC,KAAL,CAAWoD,SAASC,QAApB,CAA3F;CAEA3H;CACA;CAZuC,SAAzC;CAcA,KAfD;CAiBAkB,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrBR,iBAAS0C,WAAT,EAAsBxF,iBAAtB,EAAyC;CACxCI,8BADwC;CAExC0K,mBAAO,CAFiC;CAGxCxK,iBAHwC,iBAGlCuF,QAHkC;CAIvCA,yBAASkF,OAAT,GAAmBlC,QAAnB;CACA,aALuC;CAMxCtI,oBANwC,oBAM/BsF,QAN+B;CAOvC,oBAAMmF,SAASnC,WAAWhD,SAASkF,OAAnC;CAAA,oBACCE,WAAW7K,WAAW,CADvB;CAGA0D,uBAAOiF,KAAP,CAAaiC,MAAb,EAAqBC,QAArB,EAA+B,EAA/B,0DAAyFtD,KAAKC,KAAL,CAAWoD,SAASC,QAApB,CAAzF;CAEA3H;CACA;CAbuC,SAAzC;CAeA,KAhBD;CAkBAkB,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrBR,iBAAS0C,WAAT,EAAsBxF,iBAAtB,EAAyC;CACxCI,8BADwC;CAExCM,wBAFwC;CAGxCoK,mBAAO,CAHiC;CAIxCxK,iBAJwC,iBAIlCuF,QAJkC;CAKvCA,yBAASkF,OAAT,GAAmBF,UAAnB;CACA,aANuC;CAOxCtK,oBAPwC,oBAO/BsF,QAP+B;CAQvC,oBAAMmF,SAASnC,WAAWhD,SAASkF,OAAnC;CAAA,oBACCE,WAAW,CAAC7K,WAAWM,KAAZ,IAAqB,CADjC;CAGAoD,uBAAOiF,KAAP,CAAaiC,MAAb,EAAqBC,QAArB,EAA+B,EAA/B,2DAA0FtD,KAAKC,KAAL,CAAWoD,SAASC,QAApB,CAA1F;CAEA3H;CACA;CAduC,SAAzC;CAgBA,KAjBD;CAmBAkB,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrBR,iBAAS0C,WAAT,EAAsBxF,iBAAtB,EAAyC;CACxCI,8BADwC;CAExCM,mBAAO,CAACA,KAFgC;CAGxCoK,mBAAO,CAHiC;CAIxCxK,iBAJwC,iBAIlCuF,QAJkC;CAKvCA,yBAASkF,OAAT,GAAmBF,UAAnB;CACA,aANuC;CAOxCtK,oBAPwC,oBAO/BsF,QAP+B;CAQvC,oBAAMmF,SAASnC,WAAWhD,SAASkF,OAAnC;CAAA,oBACCE,WAAW,CAAC7K,WAAWM,KAAZ,IAAqB,CADjC;CAGAoD,uBAAOiF,KAAP,CAAaiC,MAAb,EAAqBC,QAArB,EAA+B,EAA/B,kEAAiGtD,KAAKC,KAAL,CAAWoD,SAASC,QAApB,CAAjG;CAEA3H;CACA;CAduC,SAAzC;CAgBA,KAjBD;CAmBAkB,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrBR,iBAAS0C,WAAT,EAAsBxF,iBAAtB,EAAyC;CACxCI,8BADwC;CAExC0K,mBAAO,GAFiC;CAGxCxK,iBAHwC,iBAGlCuF,QAHkC;CAIvCA,yBAASkF,OAAT,GAAmBlC,QAAnB;CACA,aALuC;CAMxCtI,oBANwC,oBAM/BsF,QAN+B;CAOvC,oBAAMmF,SAASnC,WAAWhD,SAASkF,OAAnC;CAAA,oBACCE,WAAW7K,WAAW,CADvB;CAGA;CACA0D,uBAAOiF,KAAP,CAAaiC,MAAb,EAAqBC,QAArB,EAA+B,EAA/B,4DAA2FtD,KAAKC,KAAL,CAAWoD,SAASC,QAApB,CAA3F;CAEA3H;CACA;CAduC,SAAzC;CAgBA,KAjBD;CAmBAkB,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrBR,iBAAS0C,WAAT,EAAsBxF,iBAAtB,EAAyC;CACxCI,8BADwC;CAExC0K,mBAAO,CAFiC;CAGxCtK,oBAHwC,oBAG/BqF,QAH+B,EAGKsE,eAHL;CAIvC,oBAAI,CAACtE,SAASqF,OAAd,EAAuB;CACtBrF,6BAASkF,OAAT,GAAmBZ,eAAnB;CACAtE,6BAASqF,OAAT,GAAmB,CAAnB;CACA,iBAHD,MAGO;CACNpH,2BAAO6B,KAAP,CAAaE,SAASkF,OAAtB,EAA+BZ,eAA/B,EAAgD,8CAAhD;CACAtE,6BACExB,QADF,CACW,QADX,EACqB,OADrB,EAC8B,CAD9B;CAAA,qBAEEA,QAFF,CAEW,MAFX;CAIAf;CACA;CACD;CAfuC,SAAzC;CAiBA,KAlBD;CAoBAQ,WAAOyB,MAAP,CAAcf,YAAd;CACA,CAlID;;;CCLAxC,MAAM3C,IAAN,CAAW,MAAX,EAAmB,UAACyE,MAAD;CAClBU,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAAOR,IAAP;CAAA;;;;;;;CACfgF,sCAAU9C,aACfiD,aAAa,CAACjD,WAAD,EAAc8C,OAAd,EAAuB9C,WAAvB;CACVjF,wCAAW;;CAEfuC,qCAASwF,OAAT,EAAkBtI,iBAAlB,EAAqC;CACpCI,0CAAU,GAD0B;CAEpCG,wCAFoC;CAGnCA,gDAAW,IAAX;CACA;CAJmC,6BAArC;CAMAuC,qCAAS2F,UAAT,EAAqBzI,iBAArB,EAAwC;CACvCmL,sCAAM,KADiC;CAEvC/K,0CAAU;CAF6B,6BAAxC;;oCAIMmI,MAAM,GAAN;;;CACNzE,mCAAOsH,KAAP,CAAa7K,SAAb,EAAuB,oDAAvB;CAEA+C;;;;;;;;YAlBqB;CAAA,KAAtB;CAqBAkB,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAAOR,IAAP;CAAA;;;;;;;CACfgF,sCAAU9C,aACfiD,aAAa,CAACjD,WAAD,EAAc8C,OAAd,EAAuB9C,WAAvB;CACVjF,yCAAW;;CAEfuC,qCAASwF,OAAT,EAAkBtI,iBAAlB,EAAqC;CACpCI,0CAAU,GAD0B;CAEpCG,wCAFoC;CAGnCA,iDAAW,IAAX;CACA;CAJmC,6BAArC;CAMAuC,qCAAS2F,UAAT,EAAqBzI,iBAArB,EAAwC;CACvCmL,sCAAM,IADiC;CAEvC/K,0CAAU,GAF6B;CAGvCE,qCAHuC;CAItCwD,2CAAO2B,EAAP,CAAUlF,UAAV,EAAoB,6CAApB;CAEA+C;CACA;CAPsC,6BAAxC;;;;;;;;YAXqB;CAAA,KAAtB;CAsBAQ,WAAOyB,MAAP,CAAcf,YAAd;CACA,CA7CD;;CCJAxC,MAAMkD,MAAN,CAAa,SAAb;;;CCIAlD,MAAM3C,IAAN,CAAW,QAAX,EAAqB,UAAOyE,MAAP;CAAA;;;;;;;CACpBU,mCAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrBR,qCAAS0C,WAAT,EAAsB,QAAtB;CACA1B,mCAAO2B,EAAP,CAAU,IAAV,EAAgB,oEAAhB;CAEAnC;CACA,yBALD;CAOAkB,mCAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrB,gCAAMgF,UAAU9C,WAAhB;CAEA1C,qCAASwF,OAAT,EAAkBtI,iBAAlB,EAAqCE,cAArC;CACA4C,qCAASwF,OAAT,EAAkB,EAAC+C,KAAK,CAAN,EAAlB,EAA4BnL,cAA5B;CACA4C,qCAASwF,OAAT,EAAkB,EAAC3I,OAAO,CAAR,EAAlB,EAA8BO,cAA9B;CACA4C,qCAASwF,OAAT,EAAkB,QAAlB;CACAxE,mCAAO2B,EAAP,CAAU,IAAV,EAAgB,iEAAhB;CAEAnC;CACA,yBAVD;CAYAkB,mCAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAAOR,IAAP;CAAA;;;;;;CACfgF,0DAAU9C;CACZ8F,4DAAY,OACfC,YAAY;;CAEbzI,yDAASwF,OAAT,EAAkB,EAAC5I,SAAS,CAAC,CAAD,EAAI,CAAJ,CAAV,EAAlB,EAAqC;CACpCS,2DAAO,OAD6B;CAEpCI,4DAFoC;CAGnC+K,oEAAY,IAAZ;CACA;CAJmC,iDAArC;CAMAxI,yDAASwF,OAAT,EAAkB,EAAC5I,SAAS,CAAC,CAAD,EAAI,CAAJ,CAAV,EAAlB,EAAqC;CACpCS,2DAAO,OAD6B;CAEpCI,4DAFoC;CAGnCgL,oEAAY,IAAZ;CACA;CAJmC,iDAArC;CAMAzI,yDAASwF,OAAT,EAAkB,QAAlB,EAA4B,OAA5B;;wDACMC,MAAMrI,eAAeE,QAAf,GAAoC,CAA1C;;;CACN0D,uDAAO2B,EAAP,CAAU6F,SAAV,EAAqB,sCAArB;CACAxH,uDAAOsH,KAAP,CAAaG,SAAb,EAAwB,0CAAxB;CAEAjI;;;;;;;;gCAtBqB;CAAA,yBAAtB;CAyBAkB,mCAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAAOR,IAAP;CAAA;;;;;;;CACfgF,0DAAU9C;CACZlF,yDAAQ,OACXC,YAAW;;CAEZuC,yDAASwF,OAAT,EAAkB,EAAC5I,SAAS,CAAC,CAAD,EAAI,CAAJ,CAAV,EAAlB,EAAqC;CACpCY,yDADoC;CAEnCA,iEAAQ,IAAR;CACA,qDAHmC;CAIpCC,4DAJoC;CAKnCA,oEAAW,IAAX;CACA;CANmC,iDAArC;;wDAQMgI,MAAM,GAAN;;;CACNzF,yDAASwF,OAAT,EAAkB,QAAlB;CACAxE,uDAAO2B,EAAP,CAAUnF,MAAV,EAAiB,gDAAjB;CACAwD,uDAAO2B,EAAP,CAAUlF,SAAV,EAAoB,mDAApB;CACAuD,uDAAO6B,KAAP,CAAa6C,iBAAiBF,OAAjB,EAA0B,SAA1B,CAAb,EAAmD,GAAnD,EAAwD,sCAAxD;CAEAhF;;;;;;;;gCAnBqB;CAAA,yBAAtB;CAsBAkB,mCAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAAOR,IAAP;CAAA;;;;;;;CACfgF,0DAAU9C;CACZlF,0DAAQ,OACXC,aAAW;;CAEZuC,yDAASwF,OAAT,EAAkB,EAAC5I,SAAS,CAAC,CAAD,EAAI,CAAJ,CAAV,EAAlB,EAAqC;CACpCgB,2DAAO,IAD6B;CAEpCJ,yDAFoC;CAGnCA,kEAAQ,IAAR;CACA,qDAJmC;CAKpCC,4DALoC;CAMnCA,qEAAW,IAAX;CACA;CAPmC,iDAArC;;wDASMgI,MAAM,GAAN;;;CACNzF,yDAASwF,OAAT,EAAkB,QAAlB;CACAxE,uDAAO2B,EAAP,CAAUnF,OAAV,EAAiB,6CAAjB;CACAwD,uDAAO2B,EAAP,CAAUlF,UAAV,EAAoB,gDAApB;CACAuD,uDAAO6B,KAAP,CAAa6C,iBAAiBF,OAAjB,EAA0B,SAA1B,CAAb,EAAmD,GAAnD,EAAwD,wDAAxD;CAEAhF;;;;;;;;gCApBqB;CAAA,yBAAtB;CAuBAkB,mCAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAAOR,IAAP;CAAA;;;;;;CACfgF,0DAAU9C;;CAEhB1C,yDAASwF,OAAT,EAAkB,EAAC5I,SAAS,CAAV,EAAlB,EACE2E,QADF,CACW,EAAC3E,SAAS,CAAV,EADX,EAEE2E,QAFF,CAEW,EAAC3E,SAAS,IAAV,EAFX,EAGE2E,QAHF,CAGW,EAAC3E,SAAS,IAAV,EAHX,EAIE2E,QAJF,CAIW,EAAC3E,SAAS,GAAV,EAJX;CAKAoD,yDAASwF,OAAT,EAAkB,QAAlB;CACAxE,uDAAO6B,KAAP,CAAa6C,iBAAiBF,OAAjB,EAA0B,SAA1B,CAAb,EAAmD,GAAnD,EAAwD,0CAAxD;CACAxF,yDAASwF,OAAT,EAAkB,QAAlB;CACAxE,uDAAO6B,KAAP,CAAa6C,iBAAiBF,OAAjB,EAA0B,SAA1B,CAAb,EAAmD,GAAnD,EAAwD,0CAAxD;CACAxF,yDAASwF,OAAT,EAAkB,QAAlB,EAA4B,IAA5B;CACAxE,uDAAO6B,KAAP,CAAa6C,iBAAiBF,OAAjB,EAA0B,SAA1B,CAAb,EAAmD,KAAnD,EAA0D,wCAA1D;CAEAhF;;;;;;;;gCAfqB;CAAA,yBAAtB;CAkBAQ,+BAAOyB,MAAP,CAAcf,YAAd;;;;;;;;QA5GoB;CAAA,CAArB;;;CCAAxC,MAAM3C,IAAN,CAAW,gBAAX,EAA6B,UAAOyE,MAAP;CAAA;;;;;;;CAC5BU,mCAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrB,gCAAMgF,UAAU9C,WAAhB;CAEA1C,qCAASwF,OAAT,EAAkB,OAAlB;CACAxE,mCAAO2B,EAAP,CAAU,IAAV,EAAgB,8EAAhB;CACA3C,qCAASwF,OAAT,EAAkB,QAAlB;CACAxE,mCAAO2B,EAAP,CAAU,IAAV,EAAgB,+EAAhB;CAEAnC;CACA,yBATD;CAWAkB,mCAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAAOR,IAAP;CAAA;;;;;;;CACfgF,0DAAU9C;CACZhF,4DAAW;;CAEfsC,yDAASwF,OAAT,EAAkB,EAAC5I,SAAS,CAAV,EAAlB,EAAgC;CAC/BU,8DAAU,GADqB;CAE/BI,4DAF+B;CAG9BA,oEAAW,IAAX;CACA;CAJ8B,iDAAhC;CAMAsC,yDAASwF,OAAT,EAAkB,OAAlB;;wDACMC,MAAM,EAAN;;;CACNzE,uDAAO6B,KAAP,CAAa6C,iBAAiBF,OAAjB,EAA0B,SAA1B,CAAb,EAAmD,GAAnD,EAAwD,uCAAxD;CACAxE,uDAAOsH,KAAP,CAAa5K,SAAb,EAAuB,yCAAvB;CACAsC,yDAASwF,OAAT,EAAkB,QAAlB;;wDACMC,MAAM,GAAN;;;CACNzE,uDAAO6B,KAAP,CAAa6C,iBAAiBF,OAAjB,EAA0B,SAA1B,CAAb,EAAmD,GAAnD,EAAwD,qCAAxD;CACAxE,uDAAO2B,EAAP,CAAUjF,SAAV,EAAoB,oCAApB;CAEA8C;;;;;;;;gCAnBqB;CAAA,yBAAtB;CAsBAkB,mCAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAAOR,IAAP;CAAA;;;;;;CACfgF,0DAAU9C;;CAEhB1C,yDAASwF,OAAT,EAAkB,EAAC5I,SAAS,CAAV,EAAlB,EAAgC,EAACU,UAAU,GAAX,EAAgBM,OAAO,GAAvB,EAAhC;CACAoC,yDAASwF,OAAT,EAAkB,OAAlB;;wDACMC,MAAM,GAAN;;;CACNzE,uDAAO6B,KAAP,CAAa6C,iBAAiBF,OAAjB,EAA0B,SAA1B,CAAb,EAAmD,GAAnD,EAAwD,+CAAxD;CACAxF,yDAASwF,OAAT,EAAkB,QAAlB;;wDACMC,MAAM,GAAN;;;CACNzE,uDAAO6B,KAAP,CAAa6C,iBAAiBF,OAAjB,EAA0B,SAA1B,CAAb,EAAmD,GAAnD,EAAwD,gDAAxD;;wDACMC,MAAM,GAAN;;;CACNzE,uDAAO6B,KAAP,CAAa6C,iBAAiBF,OAAjB,EAA0B,SAA1B,CAAb,EAAmD,GAAnD,EAAwD,6CAAxD;CAEAhF;;;;;;;;gCAbqB;CAAA,yBAAtB;CAgBAkB,mCAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAAOR,IAAP;CAAA;;;;;;CACfgF,0DAAU9C;;CAEhB1C,yDAASwF,OAAT,EAAkB,EAAC5I,SAAS,CAAV,EAAlB,EAAgC,EAACS,OAAO,MAAR,EAAgBC,UAAU,GAA1B,EAAhC;CACA0C,yDAAS,OAAT,EAAkB,MAAlB;;wDACMyF,MAAM,GAAN;;;CACNzE,uDAAO6B,KAAP,CAAa6C,iBAAiBF,OAAjB,EAA0B,SAA1B,CAAb,EAAmD,GAAnD,EAAwD,+BAAxD;CAEAhF;;;;;;;;gCARqB;CAAA,yBAAtB;CAWAkB,mCAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAAOR,IAAP;CAAA;;;;;;CACfgF,0DAAU9C;;CAEhB1C,yDAASwF,OAAT,EAAkB,EAAC5I,SAAS,CAAV,EAAlB,EACE2E,QADF,CACW,OADX;;wDAEMkE,MAAM,GAAN;;;CACNzE,uDAAO6B,KAAP,CAAa6C,iBAAiBF,OAAjB,EAA0B,SAA1B,CAAb,EAAmD,GAAnD,EAAwD,2CAAxD;CAEAhF;;;;;;;;gCARqB;CAAA,yBAAtB;CAWA;CAEA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CAEAQ,+BAAOyB,MAAP,CAAcf,YAAd;;;;;;;;QAzG4B;CAAA,CAA7B;;CCAAxC,MAAM3C,IAAN,CAAW,SAAX,EAAsB,UAACyE,MAAD;CACrB,QAAMwE,UAAU9C,WAAhB;CAAA,QACC9F,UAAU4I,QAAQjE,QAAR,CAAiB,OAAjB,EAA0B,SAA1B,CADX;;CAEC;CACA1E,YAAQ2I,QAAQjE,QAAR,CAAiB,OAAjB,EAA0B,OAA1B,MAAuC,GAAvC,GAA6C,KAA7C,GAAqDiE,QAAQjE,QAAR,CAAiB,OAAjB,EAA0B,OAA1B,CAH9D;CAKAG,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrBR,iBAASwF,OAAT,EAAkBtI,iBAAlB,EAAqC;CACpCO,oBADoC,oBAC3BsF,QAD2B;CAEnC/B,uBAAO6B,KAAP,CAAaE,SAAS,CAAT,EAAYxB,QAAZ,CAAqB,OAArB,EAA8B,SAA9B,CAAb,EAAuDrE,kBAAkBN,OAAzE,2CAAyHM,kBAAkBN,OAA3I;CACAoE,uBAAO6B,KAAP,CAAaE,SAAS,CAAT,EAAYxB,QAAZ,CAAqB,OAArB,EAA8B,OAA9B,CAAb,EAAqDrE,kBAAkBL,KAAvE,2CAAqHK,kBAAkBL,KAAvI;CAEA2D;CACA;CANmC,SAArC;CAQA,KATD;CAWAkB,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrBR,iBAASwF,OAAT,EAAkB,SAAlB,EAA6B;CAC5B/H,oBAD4B,oBACnBsF,QADmB;CAE3B/B,uBAAO6B,KAAP,CAAaE,SAAS,CAAT,EAAYxB,QAAZ,CAAqB,OAArB,EAA8B,SAA9B,CAAb,EAAuD3E,OAAvD,4CAAwGA,OAAxG;CACAoE,uBAAO6B,KAAP,CAAaE,SAAS,CAAT,EAAYxB,QAAZ,CAAqB,OAArB,EAA8B,OAA9B,CAAb,EAAqD1E,KAArD,4CAAoGA,KAApG;CAEA2D;CACA;CAN2B,SAA7B;CAQA,KATD;CAWAkB,eAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrBR,iBAASwF,OAAT,EAAkB,SAAlB,EAA6B;CAC5B/H,oBAD4B,oBACnBsF,QADmB;CAE3B/B,uBAAO6B,KAAP,CAAaE,SAAS,CAAT,EAAYxB,QAAZ,CAAqB,OAArB,EAA8B,SAA9B,CAAb,EAAuDrE,kBAAkBN,OAAzE,oDAAkIM,kBAAkBN,OAApJ;CACAoE,uBAAO6B,KAAP,CAAaE,SAAS,CAAT,EAAYxB,QAAZ,CAAqB,OAArB,EAA8B,OAA9B,CAAb,EAAqDrE,kBAAkBL,KAAvE,oDAA8HK,kBAAkBL,KAAhJ;CAEA2D;CACA;CAN2B,SAA7B;CAQA,KATD;CAWAQ,WAAOyB,MAAP,CAAcf,YAAd;CACA,CAxCD;;CCAA;CACAxC,MAAMwJ,IAAN,CAAW,iBAAX,EAA8B,UAAC1H,MAAD;CAC7B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,CA5DD;CA8DA;CACA9B,MAAMwJ,IAAN,CAAW,kBAAX,EAA+B,UAAC1H,MAAD;CAC9B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,CA/GD;;;CChEA9B,MAAM3C,IAAN,CAAW,MAAX,EAAmB,UAAOyE,MAAP;CAAA;;;;;;;CAClBU,mCAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrBR,qCAAS0C,WAAT,EAAsB,MAAtB;CACA1B,mCAAO2B,EAAP,CAAU,IAAV,EAAgB,oEAAhB;CAEAnC;CACA,yBALD;CAOAkB,mCAAWV,MAAX,EAAmB,CAAnB,EAAsB,UAACR,IAAD;CACrB,gCAAMgF,UAAU9C,WAAhB;CAEA1C,qCAASwF,OAAT,EAAkBtI,iBAAlB,EAAqCE,cAArC;CACA4C,qCAASwF,OAAT,EAAkB,EAAC+C,KAAK,CAAN,EAAlB,EAA4BnL,cAA5B;CACA4C,qCAASwF,OAAT,EAAkB,EAAC3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eAAO6B,KAAP,CAAa6C,iBAAiBL,QAAjB,EAA2B,YAA3B,CAAb,EAAuD,SAAvD,EAAkE,gCAAlE;CACArE,eAAO6B,KAAP,CAAa6C,iBAAiBoE,QAAjB,EAA2B,YAA3B,CAAb,EAAuD,QAAvD,EAAiE,gCAAjE;CAEAtJ;CACA,KAXD,EAWGlC,qBAXH;CAYA,CA3CD;;CCAAY,MAAMwJ,IAAN,CAAW,gBAAX,EAA6B,UAAC1H,MAAD;CAC7B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACC,CAvBD;;CCAA9B,MAAMwJ,IAAN,CAAW,aAAX,EAA0B,UAAC1H,MAAD;CACzB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,CA1BD;;CCJA9B,MAAMkD,MAAN,CAAa,YAAb;;CCIAlD,MAAMwJ,IAAN,CAAW,mBAAX,EAAgC,UAAC1H,MAAD;CAC/B;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,CAjED;;CCAA9B,MAAM3C,IAAN,CAAW,SAAX,EAAsB,UAACyE,MAAD;CACrB,QAAMR,OAAOQ,OAAOI,KAAP,CAAa,CAAb,CAAb;CAEApB,aAAS0C,WAAT,EAAsB,OAAtB,EAA+B,SAA/B,EAA0C,MAA1C,EACEnB,QADF,CACW,EAAC+H,SAAS,OAAV,EADX,EAC+B;CAC7B5L,kBAAUoJ,KAAK,UAAC/D,QAAD;CACd/B,mBAAO6B,KAAP,CAAaE,SAASxB,QAAT,CAAkB,OAAlB,EAA2B,SAA3B,CAAb,EAAoD,OAApD,EAA6D,sCAA7D;CAEAf;CACA,SAJS;CADmB,KAD/B;CASAR,aAAS0C,WAAT,EAAsB,OAAtB,EAA+B,SAA/B,EAA0C,MAA1C,EACEnB,QADF,CACW,OADX,EACoB,SADpB,EAC+B,MAD/B,EAEE2B,IAFF,CAEO,UAACH,QAAD;CACL/B,eAAO6B,KAAP,CAAaE,SAAS,CAAT,EAAYrD,KAAZ,CAAkB4J,OAA/B,EAAwC,OAAxC,EAAiD,gCAAjD;CACAtI,eAAO6B,KAAP,CAAaE,SAASxB,QAAT,CAAkB,OAAlB,EAA2B,SAA3B,CAAb,EAAoD,OAApD,EAA6D,uCAA7D;CAEAf;CACA,KAPF;CASAR,aAAS0C,WAAT,EAAsB,OAAtB,EAA+B,SAA/B,EAA0C,MAA1C,EACEnB,QADF,CACW,OADX,EACoB,SADpB,EAC+B,EAD/B,EAEE2B,IAFF,CAEO,UAACH,QAAD;CACL/B,eAAO6B,KAAP,CAAaE,SAASxB,QAAT,CAAkB,OAAlB,EAA2B,SAA3B,CAAb,EAAoD,OAApD,EAA6D,iCAA7D;CAEAf;CACA,KANF;CAQAR,aAAS0C,WAAT,EAAsB,EAAC4G,SAAS,MAAV,EAAtB,EAAyC;CACxC5L,kBAAUoJ,KAAK,UAAC/D,QAAD;CACd/B,mBAAOwI,QAAP,CAAgBzG,SAASxB,QAAT,CAAkB,OAAlB,EAA2B,SAA3B,CAAhB,EAAuD,MAAvD,EAA+D,yCAA/D;CAEAf;CACA,SAJS;CAD8B,KAAzC,EAOE0C,IAPF,CAOO,UAACH,QAAD;CACL/B,eAAO6B,KAAP,CAAaE,SAASxB,QAAT,CAAkB,OAAlB,EAA2B,SAA3B,CAAb,EAAoD,MAApD,EAA4D,yCAA5D;CAEAf;CACA,KAXF;CAYA,CAzCD;;CCAAtB,MAAM3C,IAAN,CAAW,YAAX,EAAyB,UAACyE,MAAD;CACxB,QAAMR,OAAOQ,OAAOI,KAAP,CAAa,CAAb,CAAb;CAEApB,aAAS0C,WAAT,EAAsB,OAAtB,EAA+B,YAA/B,EAA6C,QAA7C,EACEnB,QADF,CACW,EAACwI,YAAY,SAAb,EADX,EACoC;CAClCrM,kBAAUoJ,KAAK,UAAC/D,QAAD;CACd/B,mBAAO6B,KAAP,CAAaE,SAASxB,QAAT,CAAkB,OAAlB,EAA2B,YAA3B,CAAb,EAAuD,SAAvD,EAAkE,2CAAlE;CAEAf;CACA,SAJS;CADwB,KADpC;CASAR,aAAS0C,WAAT,EAAsB,OAAtB,EAA+B,YAA/B,EAA6C,QAA7C,EACEnB,QADF,CACW,OADX,EACoB,YADpB,EACkC,EADlC,EAEE2B,IAFF,CAEO,UAACH,QAAD;CACL;CACA;CACA/B,eAAO6B,KAAP,CAAaE,SAASxB,QAAT,CAAkB,OAAlB,EAA2B,YAA3B,CAAb,EAAuD,QAAvD,EAAiE,oCAAjE;CAEAf;CACA,KARF;CAUAR,aAAS0C,WAAT,EAAsB,EAACqH,YAAY,QAAb,EAAtB,EAA8C;CAC7CrM,kBAAUoJ,KAAK,UAAC/D,QAAD;CACd/B,mBAAOwI,QAAP,CAAgBzG,SAASxB,QAAT,CAAkB,OAAlB,EAA2B,YAA3B,CAAhB,EAA0D,SAA1D,EAAqE,8CAArE;CAEAf;CACA,SAJS;CADmC,KAA9C,EAOE0C,IAPF,CAOO,UAACH,QAAD;CACL/B,eAAO6B,KAAP,CAAaE,SAASxB,QAAT,CAAkB,OAAlB,EAA2B,YAA3B,CAAb,EAAuD,QAAvD,EAAiE,8CAAjE;CAEAf;CACA,KAXF;CAYA,CAlCD;;"}